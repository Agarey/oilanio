{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilan-mirror\\\\goco\\\\src\\\\components\\\\Forms\\\\BecomeAPartnerForm\\\\BecomeAPartner.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styles from '../../../../styles/components/form.module.css';\nimport globals from \"../../../globals\";\n\nconst axios = require('axios').default;\n\nexport function BecomeAPartner(props) {\n  const {\n    0: companyName,\n    1: setCompanyName\n  } = useState(\"\");\n  const {\n    0: contactName,\n    1: setContactName\n  } = useState(\"\");\n  const {\n    0: phone,\n    1: setPhone\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const data = {\n      company_name: companyName,\n      fullname: contactName,\n      phone: phone,\n      email: email\n    };\n    const result = await axios.post(`${globals.productionServerDomain}/partnershipRequests`, data);\n    console.log(result.data);\n    setMessage(\"Заявка успешно отправлена!\");\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formBody,\n    style: {\n      padding: '0 30px 30px 30px',\n      boxSizing: 'border-box',\n      marginTop: '-5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"\\u0425\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C \\u043F\\u0430\\u0440\\u0442\\u043D\\u0435\\u0440\\u043E\\u043C?\"), __jsx(\"span\", {\n    className: styles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F \\u043D\\u0438\\u0436\\u0435, \\u0438 \\u043E\\u0436\\u0438\\u0434\\u0430\\u0439\\u0442\\u0435 \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 79\n    }\n  }), \" \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430 \\u043E\\u0442 \\u043D\\u0430\\u0448\\u0438\\u0445 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440\\u043E\\u0432\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: companyName,\n    placeholder: 'Наименование вашей компании',\n    required: true,\n    onChange: e => setCompanyName(e.target.value),\n    className: styles.partnerFormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    className: styles.partnerFormInput,\n    onKeyDown: e => {\n      if (e.keyCode === 8) {\n        setPhone(phone.slice(0, -1));\n      }\n    },\n    onChange: e => globals.checkPhoneMask(e.target.value, setPhone),\n    placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    value: email,\n    required: true,\n    placeholder: 'Адрес электронной почты',\n    onChange: e => setEmail(e.target.value),\n    className: styles.partnerFormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: contactName,\n    placeholder: 'Контактное лицо',\n    onChange: e => setContactName(e.target.value),\n    className: styles.partnerFormInput,\n    minLength: 2,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, message), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\",\n    className: styles.formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Server/data/htdocs/oilan-mirror/goco/src/components/Forms/BecomeAPartnerForm/BecomeAPartner.js"],"names":["React","useState","styles","globals","axios","require","default","BecomeAPartner","props","companyName","setCompanyName","contactName","setContactName","phone","setPhone","email","setEmail","message","setMessage","handleSubmit","evt","preventDefault","data","company_name","fullname","result","post","productionServerDomain","console","log","formBody","padding","boxSizing","marginTop","title","subtitle","e","target","value","partnerFormInput","keyCode","slice","checkPhoneMask","formSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from '../../../../styles/components/form.module.css'\r\nimport globals from \"../../../globals\";\r\nconst axios = require('axios').default;\r\n\r\n\r\nexport function BecomeAPartner(props) {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [contactName, setContactName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage]= useState(\"\");\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const data = {\r\n            company_name: companyName,\r\n            fullname: contactName,\r\n            phone: phone,\r\n            email: email\r\n        };\r\n\r\n        const result = await axios.post(`${globals.productionServerDomain}/partnershipRequests`, data);\r\n\r\n        console.log(result.data);\r\n\r\n        setMessage(\"Заявка успешно отправлена!\");\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.formBody} style={{padding: '0 30px 30px 30px', boxSizing: 'border-box', marginTop: '-5px'}}>\r\n            <span className={styles.title}>Хотите стать партнером?</span>\r\n            <span className={styles.subtitle}>Заполните поля ниже, и ожидайте <br/> ответа от наших операторов</span>\r\n            <br/>\r\n            <input\r\n                type=\"text\"\r\n                value={companyName}\r\n                placeholder={'Наименование вашей компании'}\r\n                required\r\n                onChange={e => setCompanyName(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                className={styles.partnerFormInput}\r\n                onKeyDown={e => {\r\n                    if(e.keyCode === 8){\r\n                        setPhone(phone.slice(0,-1));\r\n                    }\r\n                }}\r\n                onChange={e => globals.checkPhoneMask(e.target.value, setPhone)}\r\n                placeholder='Номер телефона'\r\n                value={phone}\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                required\r\n                placeholder={'Адрес электронной почты'}\r\n                onChange={e => setEmail(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={contactName}\r\n                placeholder={'Контактное лицо'}\r\n                onChange={e => setContactName(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n                minLength={2}\r\n                required\r\n            />\r\n\r\n            <p className={styles.message}>{message}</p>\r\n\r\n            <input type=\"submit\" value=\"Оставить заявку\" className={styles.formSubmit}/>\r\n        </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}