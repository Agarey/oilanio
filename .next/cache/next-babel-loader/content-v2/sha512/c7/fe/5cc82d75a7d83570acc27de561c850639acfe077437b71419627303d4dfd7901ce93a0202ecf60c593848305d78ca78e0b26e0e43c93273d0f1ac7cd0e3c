{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilan-mirror\\\\goco\\\\src\\\\components\\\\ModeratorBlock\\\\ModeratorBlock.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from \"./ModeratorBlock.module.css\";\nimport CourseCard from \"../CourseCard/CourseCard\";\nimport HorizontalLine from \"../HorizontalLine/HorizaontalLine\";\nimport React, { useState, useEffect } from \"react\";\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css';\nimport StockCard from \"../StockCard/StockCard\";\nimport ContactButton from \"../ContactButton/ContactButton\";\nimport { useContext } from \"react\";\nimport UserContext from \"../../userContext\";\nimport globals from \"../../globals\";\nimport EditCourseCard from \"../EditCourseCard/EditCourseCard\";\nimport Loading from \"../Loading/Loading\";\nimport classnames from 'classnames';\nimport { useLongPress } from 'use-long-press';\nimport { ContactForm } from \"../Forms/ContactForm/ContactForm\";\nimport ModalWindow from \"../Modal/ModalWindow\";\nimport { SubscriptionPaymentForm } from \"../Forms/SubscriptionPaymentForm/SubscriptionPaymentForm\";\nimport { CourseSearchForm } from \"../Forms/CourseSearchForm/CourseSearchForm\";\nimport TutorCourseCard from \"../TutorCourseCard\";\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\n\nconst axios = require('axios').default;\n\nfunction ModeratorBlock({\n  props\n}) {\n  const {\n    0: cityId,\n    1: setCityId\n  } = useState(0);\n  const {\n    0: directionId,\n    1: setDirectionId\n  } = useState(0);\n  const {\n    0: isOnline,\n    1: setIsOnline\n  } = useState(0);\n  const {\n    0: courseId,\n    1: setCourseId\n  } = useState(0);\n  const {\n    0: searchingTutors,\n    1: setSearchingTutors\n  } = useState(false);\n  const {\n    0: courseCards,\n    1: setCourseCards\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: loadingModal,\n    1: setLoadingModal\n  } = useState(false);\n  const {\n    0: openMoreSort,\n    1: setOpenMoreSort\n  } = useState(false);\n  const {\n    0: hideSort,\n    1: setHideSort\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(0);\n  const {\n    0: cardsNum,\n    1: setCardsNum\n  } = useState(12);\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState(0);\n  const {\n    0: lessonType,\n    1: setLessonType\n  } = useState(0);\n  const {\n    0: currentCourseCategory,\n    1: setCurrentCourseCategory\n  } = useState(\"Найденные курсы\");\n  const {\n    0: tempCategoryId,\n    1: setTempCategoryId\n  } = useState(\"Все направления\");\n  const {\n    0: imagesBase,\n    1: setImagesBase\n  } = useState([]);\n\n  const loadCourseCards = async () => {\n    setLoading(true);\n    let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\n    setImagesBase(imagesBaseResponse.data);\n    let result = await axios.get(`${globals.productionServerDomain}/courseCards/`).then(() => {\n      setCourseCards(result.row);\n      console.log(result.data);\n    }).then(() => {\n      setLoading(false);\n    });\n  };\n\n  const {\n    0: searchingCenterState,\n    1: setSearchingCenterState\n  } = useState(true);\n  useEffect(async () => {\n    setLoading(true);\n    const params = new URLSearchParams(window.location.search);\n    console.log('params', params);\n    let centerName = params.get('centerName');\n    let direction = null;\n    let city = null;\n    let price = null;\n    let isOnline = null;\n    let center = null;\n    let searchingCenter = Number(params.get('searchingCenter'));\n    setSearchingCenterState(Boolean(searchingCenter));\n\n    if (params.has('direction')) {\n      direction = params.get('direction');\n      setDirectionId(Number(direction)); //document.getElementById(\"directionSelect\").value = direction.toString();\n    }\n\n    if (params.has('city')) {\n      city = params.get('city');\n      setCityId(Number(city)); //document.getElementById(\"citySelect\").value = city.toString();\n    }\n\n    if (params.has('price')) {\n      price = params.get('price');\n      setDirectionId(Number(direction)); //document.getElementById(\"priceSelect\").value = price;\n    }\n\n    if (params.has('isOnline')) {\n      isOnline = params.get('isOnline');\n      setIsOnline(Number(isOnline)); //document.getElementById(\"isOnlineSelect\").value = isOnline;\n    }\n\n    if (params.has('center')) {\n      center = params.get('center'); //document.getElementById(\"centerSelect\").value = center;\n    }\n\n    loadCourseCards().then(() => setLoading(false));\n    document.querySelector('#page_top').scrollIntoView({\n      behavior: 'smooth'\n    });\n    setLoading(false);\n  }, []);\n  const longPressHandler = useLongPress(() => {\n    setShowLinkModal(true);\n  });\n  const {\n    0: showLinkModal,\n    1: setShowLinkModal\n  } = useState(false);\n  const {\n    0: showCourseSearchModal,\n    1: setCourseSearchModal\n  } = useState(false);\n\n  const handleLinkModalClose = () => setShowLinkModal(false);\n\n  const handleCourseSearchModalClose = () => setCourseSearchModal(false);\n\n  let {\n    0: linkForTarget,\n    1: setLinkForTarget\n  } = useState('');\n\n  const sendApplication = (courseId, userInfo) => {\n    let data = {\n      city_id: cityId,\n      direction_id: directionId,\n      name: userInfo.fullName,\n      phone: userInfo.phone,\n      email: userInfo.email,\n      promocode: userInfo.promocode,\n      age: 0,\n      isOnline: isOnline,\n      course_id: courseId,\n      role_id: searchingTutors ? 6 : 4\n    };\n    axios({\n      method: 'post',\n      url: `${globals.productionServerDomain}/createCourseSearchTicket`,\n      data: data,\n      headers: {\n        'Authorization': `Bearer ${globals.localStorageKeys.authToken}`\n      }\n    }).then(function (res) {}).catch(() => {\n      alert('Что-то пошло нетак!');\n    });\n  };\n\n  return __jsx(\"div\", {\n    id: 'page_top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(ModalWindow, {\n    show: showLinkModal,\n    handleClose: handleLinkModalClose,\n    contactForm: 'contactForm',\n    body: __jsx(React.Fragment, null, __jsx(\"p\", {\n      style: {\n        color: 'white',\n        fontSize: 18,\n        padding: 20,\n        boxSizing: 'border-box',\n        width: '100%',\n        wordBreak: 'break-word'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430:\"), linkForTarget)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"\\u041A\\u0443\\u0440\\u0441\\u044B\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/atom-icon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    id: 'coursesBlock',\n    className: classnames(styles.container, styles.topBlock),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, __jsx(React.Fragment, null, courseCards !== null ? imagesBase.length !== 0 && (courseCards.length > 0 ? __jsx(\"div\", {\n    className: classnames(styles.courses_block),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }\n  }, courseCards.map((course, idx) => {\n    if (course.title !== 'test') {\n      return __jsx(\"div\", {\n        className: styles.courseCard_item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 65\n        }\n      }, searchingCenterState === false && __jsx(TutorCourseCard, {\n        key: idx,\n        coverImage: imagesBase[Math.floor(Math.random() * imagesBase.length)].src,\n        sendApplicationCallback: sendApplication,\n        setLoadingModal: setLoadingModal,\n        course: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 73\n        }\n      }), searchingCenterState === true && __jsx(CourseCard, {\n        key: idx,\n        coverImage: imagesBase[Math.floor(Math.random() * imagesBase.length)].src,\n        sendApplicationCallback: sendApplication,\n        setLoadingModal: setLoadingModal,\n        course: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 73\n        }\n      }));\n    }\n  })) : __jsx(CourseSearchResultIsNotDefind, {\n    catalog: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 55\n    }\n  })) : __jsx(\"div\", {\n    className: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"/loader.gif\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  })))));\n}\n\nexport default ModeratorBlock;","map":{"version":3,"sources":["C:/Server/data/htdocs/oilan-mirror/goco/src/components/ModeratorBlock/ModeratorBlock.js"],"names":["Head","styles","CourseCard","HorizontalLine","React","useState","useEffect","Slider","StockCard","ContactButton","useContext","UserContext","globals","EditCourseCard","Loading","classnames","useLongPress","ContactForm","ModalWindow","SubscriptionPaymentForm","CourseSearchForm","TutorCourseCard","CourseSearchResultIsNotDefind","axios","require","default","ModeratorBlock","props","cityId","setCityId","directionId","setDirectionId","isOnline","setIsOnline","courseId","setCourseId","searchingTutors","setSearchingTutors","courseCards","setCourseCards","loading","setLoading","loadingModal","setLoadingModal","openMoreSort","setOpenMoreSort","hideSort","setHideSort","currentPage","setCurrentPage","cardsNum","setCardsNum","sortType","setSortType","lessonType","setLessonType","currentCourseCategory","setCurrentCourseCategory","tempCategoryId","setTempCategoryId","imagesBase","setImagesBase","loadCourseCards","imagesBaseResponse","get","productionServerDomain","data","result","then","row","console","log","searchingCenterState","setSearchingCenterState","params","URLSearchParams","window","location","search","centerName","direction","city","price","center","searchingCenter","Number","Boolean","has","document","querySelector","scrollIntoView","behavior","longPressHandler","setShowLinkModal","showLinkModal","showCourseSearchModal","setCourseSearchModal","handleLinkModalClose","handleCourseSearchModalClose","linkForTarget","setLinkForTarget","sendApplication","userInfo","city_id","direction_id","name","fullName","phone","email","promocode","age","course_id","role_id","method","url","headers","localStorageKeys","authToken","res","catch","alert","color","fontSize","padding","boxSizing","width","wordBreak","container","topBlock","length","courses_block","map","course","idx","title","courseCard_item","Math","floor","random","src","loader"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAO,4CAAP;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAAQC,uBAAR,QAAsC,0DAAtC;AACA,SAAQC,gBAAR,QAA+B,4CAA/B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,6BAAP,MAA0C,kCAA1C;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAiC;AAC7B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBxB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACyB,WAAD;AAAA,OAAcC;AAAd,MAAgC1B,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAAC2B,QAAD;AAAA,OAAWC;AAAX,MAA0B5B,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAAC6B,QAAD;AAAA,OAAWC;AAAX,MAA0B9B,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAM;AAAA,OAAC+B,eAAD;AAAA,OAAkBC;AAAlB,MAAwChC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACiC,WAAD;AAAA,OAAcC;AAAd,MAAgClC,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM;AAAA,OAACmC,OAAD;AAAA,OAAUC;AAAV,MAAwBpC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACqC,YAAD;AAAA,OAAeC;AAAf,MAAkCtC,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACuC,YAAD;AAAA,OAAeC;AAAf,MAAkCxC,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACyC,QAAD;AAAA,OAAWC;AAAX,MAA0B1C,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM;AAAA,OAAC2C,WAAD;AAAA,OAAcC;AAAd,MAAgC5C,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAAC6C,QAAD;AAAA,OAAWC;AAAX,MAA0B9C,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAA,OAAC+C,QAAD;AAAA,OAAWC;AAAX,MAA0BhD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACiD,UAAD;AAAA,OAAaC;AAAb,MAA8BlD,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AAAA,OAACmD,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDpD,QAAQ,CAAC,iBAAD,CAAlE;AACA,QAAM;AAAA,OAACqD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCtD,QAAQ,CAAC,iBAAD,CAApD;AAEA,QAAM;AAAA,OAACuD,UAAD;AAAA,OAAaC;AAAb,MAA8BxD,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMyD,eAAe,GAAG,YAAY;AAChCrB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAIsB,kBAAkB,GAAG,MAAMxC,KAAK,CAACyC,GAAN,CAAW,GAAEpD,OAAO,CAACqD,sBAAuB,aAA5C,CAA/B;AACAJ,IAAAA,aAAa,CAACE,kBAAkB,CAACG,IAApB,CAAb;AAEA,QAAIC,MAAM,GAAG,MAAM5C,KAAK,CAACyC,GAAN,CAAW,GAAEpD,OAAO,CAACqD,sBAAuB,eAA5C,EAA4DG,IAA5D,CAAiE,MAAM;AACtF7B,MAAAA,cAAc,CAAC4B,MAAM,CAACE,GAAR,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACD,IAAnB;AACH,KAHkB,EAGhBE,IAHgB,CAGX,MAAM;AACV3B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALkB,CAAnB;AAMH,GAZD;;AAcA,QAAM;AAAA,OAAC+B,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDpE,QAAQ,CAAC,IAAD,CAAhE;AACAC,EAAAA,SAAS,CAAC,YAAW;AACjBmC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMiC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,MAAtB;AACA,QAAIK,UAAU,GAAGL,MAAM,CAACV,GAAP,CAAW,YAAX,CAAjB;AACA,QAAIgB,SAAS,GAAG,IAAhB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,KAAK,GAAG,IAAZ;AACA,QAAIlD,QAAQ,GAAG,IAAf;AACA,QAAImD,MAAM,GAAG,IAAb;AACA,QAAIC,eAAe,GAAGC,MAAM,CAACX,MAAM,CAACV,GAAP,CAAW,iBAAX,CAAD,CAA5B;AACAS,IAAAA,uBAAuB,CAACa,OAAO,CAACF,eAAD,CAAR,CAAvB;;AAEA,QAAIV,MAAM,CAACa,GAAP,CAAW,WAAX,CAAJ,EAA6B;AACzBP,MAAAA,SAAS,GAAGN,MAAM,CAACV,GAAP,CAAW,WAAX,CAAZ;AACAjC,MAAAA,cAAc,CAACsD,MAAM,CAACL,SAAD,CAAP,CAAd,CAFyB,CAGzB;AACH;;AACD,QAAIN,MAAM,CAACa,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACpBN,MAAAA,IAAI,GAAGP,MAAM,CAACV,GAAP,CAAW,MAAX,CAAP;AACAnC,MAAAA,SAAS,CAACwD,MAAM,CAACJ,IAAD,CAAP,CAAT,CAFoB,CAGpB;AACH;;AACD,QAAIP,MAAM,CAACa,GAAP,CAAW,OAAX,CAAJ,EAAyB;AACrBL,MAAAA,KAAK,GAAGR,MAAM,CAACV,GAAP,CAAW,OAAX,CAAR;AACAjC,MAAAA,cAAc,CAACsD,MAAM,CAACL,SAAD,CAAP,CAAd,CAFqB,CAGrB;AACH;;AACD,QAAIN,MAAM,CAACa,GAAP,CAAW,UAAX,CAAJ,EAA4B;AACxBvD,MAAAA,QAAQ,GAAG0C,MAAM,CAACV,GAAP,CAAW,UAAX,CAAX;AACA/B,MAAAA,WAAW,CAACoD,MAAM,CAACrD,QAAD,CAAP,CAAX,CAFwB,CAGxB;AACH;;AACD,QAAI0C,MAAM,CAACa,GAAP,CAAW,QAAX,CAAJ,EAA0B;AACtBJ,MAAAA,MAAM,GAAGT,MAAM,CAACV,GAAP,CAAW,QAAX,CAAT,CADsB,CAEtB;AACH;;AAEGF,IAAAA,eAAe,GAAGM,IAAlB,CAAuB,MAAI3B,UAAU,CAAC,KAAD,CAArC;AAGJ+C,IAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,cAApC,CAAmD;AAC/CC,MAAAA,QAAQ,EAAE;AADqC,KAAnD;AAGAlD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GA7CQ,EA6CN,EA7CM,CAAT;AA+CA,QAAMmD,gBAAgB,GAAG5E,YAAY,CAAC,MAAM;AACxC6E,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFoC,CAArC;AAIA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBD;AAAhB,MAAoCxF,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC0F,qBAAD;AAAA,OAAwBC;AAAxB,MAAgD3F,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAM4F,oBAAoB,GAAG,MAAMJ,gBAAgB,CAAC,KAAD,CAAnD;;AACA,QAAMK,4BAA4B,GAAG,MAAMF,oBAAoB,CAAC,KAAD,CAA/D;;AAEA,MAAI;AAAA,OAACG,aAAD;AAAA,OAAgBC;AAAhB,MAAoC/F,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMgG,eAAe,GAAG,CAACnE,QAAD,EAAWoE,QAAX,KAAwB;AAE5C,QAAIpC,IAAI,GAAG;AACPqC,MAAAA,OAAO,EAAE3E,MADF;AAEP4E,MAAAA,YAAY,EAAE1E,WAFP;AAGP2E,MAAAA,IAAI,EAAEH,QAAQ,CAACI,QAHR;AAIPC,MAAAA,KAAK,EAAEL,QAAQ,CAACK,KAJT;AAKPC,MAAAA,KAAK,EAAEN,QAAQ,CAACM,KALT;AAMPC,MAAAA,SAAS,EAAEP,QAAQ,CAACO,SANb;AAOPC,MAAAA,GAAG,EAAE,CAPE;AAQP9E,MAAAA,QAAQ,EAAEA,QARH;AASP+E,MAAAA,SAAS,EAAE7E,QATJ;AAUP8E,MAAAA,OAAO,EAAE5E,eAAe,GAAG,CAAH,GAAO;AAVxB,KAAX;AAaAb,IAAAA,KAAK,CAAC;AACF0F,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAAG,GAAEtG,OAAO,CAACqD,sBAAuB,2BAFrC;AAGFC,MAAAA,IAAI,EAAEA,IAHJ;AAIFiD,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASvG,OAAO,CAACwG,gBAAR,CAAyBC,SAAU;AADzD;AAJP,KAAD,CAAL,CAOGjD,IAPH,CAOQ,UAASkD,GAAT,EAAa,CAEpB,CATD,EASGC,KATH,CASS,MAAM;AACXC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,KAXD;AAYH,GA3BD;;AA6BA,SACI;AAAK,IAAA,EAAE,EAAE,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AACI,IAAA,IAAI,EAAE1B,aADV;AAEI,IAAA,WAAW,EAAEG,oBAFjB;AAGI,IAAA,WAAW,EAAE,aAHjB;AAII,IAAA,IAAI,EACA,4BACI;AAAG,MAAA,KAAK,EAAE;AACNwB,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNC,QAAAA,OAAO,EAAE,EAHH;AAINC,QAAAA,SAAS,EAAE,YAJL;AAKNC,QAAAA,KAAK,EAAE,MALD;AAMNC,QAAAA,SAAS,EAAE;AANL,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CARJ,EASK3B,aATL,CADJ,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAsBI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAtBJ,EA4BI;AAAK,IAAA,EAAE,EAAE,cAAT;AACK,IAAA,SAAS,EAAEpF,UAAU,CAACd,MAAM,CAAC8H,SAAR,EAAmB9H,MAAM,CAAC+H,QAA1B,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIY,4BAEQ1F,WAAW,KAAK,IAAhB,GACIsB,UAAU,CAACqE,MAAX,KAAsB,CAAtB,KACI3F,WAAW,CAAC2F,MAAZ,GAAqB,CAArB,GACI;AAAK,IAAA,SAAS,EAAElH,UAAU,CAACd,MAAM,CAACiI,aAAR,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ5F,WAAW,CAAC6F,GAAZ,CAAgB,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC7B,QAAID,MAAM,CAACE,KAAP,KAAiB,MAArB,EAA6B;AACzB,aACI;AAAK,QAAA,SAAS,EAAErI,MAAM,CAACsI,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK/D,oBAAoB,KAAG,KAAvB,IACG,MAAC,eAAD;AAAiB,QAAA,GAAG,EAAE6D,GAAtB;AAA2B,QAAA,UAAU,EAAEzE,UAAU,CAAC4E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB9E,UAAU,CAACqE,MAAtC,CAAD,CAAV,CAA0DU,GAAjG;AAAsG,QAAA,uBAAuB,EAAEtC,eAA/H;AAAgJ,QAAA,eAAe,EAAE1D,eAAjK;AAAkL,QAAA,MAAM,EAAEyF,MAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAIK5D,oBAAoB,KAAG,IAAvB,IACG,MAAC,UAAD;AAAY,QAAA,GAAG,EAAE6D,GAAjB;AAAsB,QAAA,UAAU,EAAEzE,UAAU,CAAC4E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB9E,UAAU,CAACqE,MAAtC,CAAD,CAAV,CAA0DU,GAA5F;AAAiG,QAAA,uBAAuB,EAAEtC,eAA1H;AAA2I,QAAA,eAAe,EAAE1D,eAA5J;AAA6K,QAAA,MAAM,EAAEyF,MAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,CADJ;AAUH;AACJ,GAbD,CAFR,CADJ,GAmBc,MAAC,6BAAD;AAA+B,IAAA,OAAO,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBlB,CADJ,GAuBI;AAAK,IAAA,SAAS,EAAEnI,MAAM,CAAC2I,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,GAAG,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAzBZ,CAJZ,CA5BJ,CADJ;AA0EH;;AAGD,eAAelH,cAAf","sourcesContent":["import Head from 'next/head'\r\nimport styles from \"./ModeratorBlock.module.css\";\r\nimport CourseCard from \"../CourseCard/CourseCard\";\r\nimport HorizontalLine from \"../HorizontalLine/HorizaontalLine\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css'\r\n\r\nimport StockCard from \"../StockCard/StockCard\";\r\nimport ContactButton from \"../ContactButton/ContactButton\";\r\nimport {useContext} from \"react\";\r\nimport UserContext from \"../../userContext\"\r\nimport globals from \"../../globals\";\r\nimport EditCourseCard from \"../EditCourseCard/EditCourseCard\";\r\nimport Loading from \"../Loading/Loading\"\r\nimport classnames from 'classnames'\r\nimport {useLongPress} from 'use-long-press';\r\nimport {ContactForm} from \"../Forms/ContactForm/ContactForm\";\r\nimport ModalWindow from \"../Modal/ModalWindow\";\r\nimport {SubscriptionPaymentForm} from \"../Forms/SubscriptionPaymentForm/SubscriptionPaymentForm\";\r\nimport {CourseSearchForm} from \"../Forms/CourseSearchForm/CourseSearchForm\";\r\nimport TutorCourseCard from \"../TutorCourseCard\";\r\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\r\n\r\n\r\nconst axios = require('axios').default;\r\n\r\nfunction ModeratorBlock({props}) {\r\n    const [cityId, setCityId] = useState(0);\r\n    const [directionId, setDirectionId] = useState(0);\r\n    const [isOnline, setIsOnline] = useState(0);\r\n    const [courseId, setCourseId] = useState(0);\r\n\r\n    const [searchingTutors, setSearchingTutors] = useState(false);\r\n    const [courseCards, setCourseCards] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingModal, setLoadingModal] = useState(false);\r\n    const [openMoreSort, setOpenMoreSort] = useState(false)\r\n    const [hideSort, setHideSort] = useState(false)\r\n\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [cardsNum, setCardsNum] = useState(12);\r\n\r\n    const [sortType, setSortType] = useState(0)\r\n    const [lessonType, setLessonType] = useState(0)\r\n\r\n    const [currentCourseCategory, setCurrentCourseCategory] = useState(\"Найденные курсы\")\r\n    const [tempCategoryId, setTempCategoryId] = useState(\"Все направления\")\r\n\r\n    const [imagesBase, setImagesBase] = useState([]);\r\n\r\n    const loadCourseCards = async () => {\r\n        setLoading(true)\r\n\r\n        let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\r\n        setImagesBase(imagesBaseResponse.data);\r\n\r\n        let result = await axios.get(`${globals.productionServerDomain}/courseCards/`).then(() => {\r\n            setCourseCards(result.row);\r\n            console.log(result.data);\r\n        }).then(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    \r\n    const [searchingCenterState, setSearchingCenterState] = useState(true)\r\n    useEffect(async () =>{\r\n        setLoading(true)\r\n        const params = new URLSearchParams(window.location.search);\r\n        console.log('params', params);\r\n        let centerName = params.get('centerName');\r\n        let direction = null;\r\n        let city = null;\r\n        let price = null;\r\n        let isOnline = null;\r\n        let center = null;\r\n        let searchingCenter = Number(params.get('searchingCenter'));\r\n        setSearchingCenterState(Boolean(searchingCenter))\r\n\r\n        if (params.has('direction')) {\r\n            direction = params.get('direction');\r\n            setDirectionId(Number(direction));\r\n            //document.getElementById(\"directionSelect\").value = direction.toString();\r\n        }\r\n        if (params.has('city')) {\r\n            city = params.get('city');\r\n            setCityId(Number(city));\r\n            //document.getElementById(\"citySelect\").value = city.toString();\r\n        }\r\n        if (params.has('price')) {\r\n            price = params.get('price');\r\n            setDirectionId(Number(direction));\r\n            //document.getElementById(\"priceSelect\").value = price;\r\n        }\r\n        if (params.has('isOnline')) {\r\n            isOnline = params.get('isOnline');\r\n            setIsOnline(Number(isOnline))\r\n            //document.getElementById(\"isOnlineSelect\").value = isOnline;\r\n        }\r\n        if (params.has('center')) {\r\n            center = params.get('center');\r\n            //document.getElementById(\"centerSelect\").value = center;\r\n        }\r\n        \r\n            loadCourseCards().then(()=>setLoading(false))\r\n        \r\n\r\n        document.querySelector('#page_top').scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    const longPressHandler = useLongPress(() => {\r\n        setShowLinkModal(true);\r\n    });\r\n\r\n    const [showLinkModal, setShowLinkModal] = useState(false);\r\n    const [showCourseSearchModal, setCourseSearchModal] = useState(false);\r\n\r\n    const handleLinkModalClose = () => setShowLinkModal(false);\r\n    const handleCourseSearchModalClose = () => setCourseSearchModal(false);\r\n\r\n    let [linkForTarget, setLinkForTarget] = useState('');\r\n\r\n    const sendApplication = (courseId, userInfo) => {\r\n\r\n        let data = {\r\n            city_id: cityId,\r\n            direction_id: directionId,\r\n            name: userInfo.fullName,\r\n            phone: userInfo.phone,\r\n            email: userInfo.email,\r\n            promocode: userInfo.promocode,\r\n            age: 0,\r\n            isOnline: isOnline,\r\n            course_id: courseId,\r\n            role_id: searchingTutors ? 6 : 4\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: `${globals.productionServerDomain}/createCourseSearchTicket`,\r\n            data: data,\r\n            headers: {\r\n                'Authorization': `Bearer ${globals.localStorageKeys.authToken}`\r\n            }\r\n        }).then(function(res){\r\n\r\n        }).catch(() => {\r\n            alert('Что-то пошло нетак!');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id={'page_top'}>\r\n            <ModalWindow\r\n                show={showLinkModal}\r\n                handleClose={handleLinkModalClose}\r\n                contactForm={'contactForm'}\r\n                body={\r\n                    <>\r\n                        <p style={{\r\n                            color: 'white',\r\n                            fontSize: 18,\r\n                            padding: 20,\r\n                            boxSizing: 'border-box',\r\n                            width: '100%',\r\n                            wordBreak: 'break-word'\r\n                        }}>\r\n                            <p>Ссылка:</p>\r\n                            {linkForTarget}\r\n                        </p>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Head>\r\n                <title>Курсы</title>\r\n                <link rel=\"icon\" href=\"/atom-icon.png\"/>\r\n                \r\n            </Head>\r\n\r\n            <div id={'coursesBlock'}\r\n                 className={classnames(styles.container, styles.topBlock)}>\r\n                {\r\n                    (\r\n                        <>\r\n                            {\r\n                                courseCards !== null ? (\r\n                                    imagesBase.length !== 0 && (\r\n                                        courseCards.length > 0 ? (\r\n                                            <div className={classnames(styles.courses_block)}>\r\n                                                {\r\n                                                    courseCards.map((course, idx) => {\r\n                                                        if (course.title !== 'test') {\r\n                                                            return (\r\n                                                                <div className={styles.courseCard_item}>\r\n                                                                    {searchingCenterState===false && (\r\n                                                                        <TutorCourseCard key={idx} coverImage={imagesBase[Math.floor(Math.random() * imagesBase.length)].src} sendApplicationCallback={sendApplication} setLoadingModal={setLoadingModal} course={course}/>\r\n                                                                    )}\r\n                                                                    {searchingCenterState===true && (\r\n                                                                        <CourseCard key={idx} coverImage={imagesBase[Math.floor(Math.random() * imagesBase.length)].src} sendApplicationCallback={sendApplication} setLoadingModal={setLoadingModal} course={course}/>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n\r\n                                            </div>) : <CourseSearchResultIsNotDefind catalog={true}/>)\r\n                                ) : (\r\n                                    <div className={styles.loader}>\r\n                                        <img src=\"/loader.gif\" alt=\"\"></img>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n           \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ModeratorBlock;\r\n"]},"metadata":{},"sourceType":"module"}