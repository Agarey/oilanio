{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilanio-mirror-agarey\\\\src\\\\components\\\\SubscriptionCardsWrapper\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './style.module.css';\nimport { useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport bcrypt from \"bcryptjs\";\nimport globals from \"../../globals\";\nimport { default as axios } from \"axios\";\nimport { useRouter } from \"next/router\";\n\nconst SubscriptionCardsWrapper = () => {\n  function prettify(num) {\n    let n = num.toString();\n    return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + ' ');\n  }\n\n  const router = useRouter();\n  const {\n    0: subsriptionsCards,\n    1: setSubscriptionsCards\n  } = useState([{\n    id: 1,\n    title: 'Месяц',\n    opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\n    price: localStorage.getItem(globals.localStorageKeys.centerId) == 316 ? 10000 : 15000\n  }, {\n    id: 3,\n    title: 'Месяца',\n    opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\n    price: 42000\n  }, {\n    id: 6,\n    title: 'Месяцев',\n    opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\n    price: 78000\n  }]);\n\n  const createPayment = async (monthCount, totalPrice) => {\n    let reference_id = Math.floor(Math.random() * 999999) + 1;\n    let paymentHost = \"https://finddifferences.club/proxy\";\n    let secret_key = \"CbYf5sAuv4VJyFz9cD9x\";\n    const salt = bcrypt.genSaltSync(10);\n    const paymentPayload = {\n      centerId: localStorage.getItem(globals.localStorageKeys.centerId),\n      monthCount: monthCount\n    };\n    let paymentData = {\n      reference_id: reference_id,\n      request_url: `${globals.productionServerDomain}/handlepayment`,\n      back_url: `${globals.productionServerDomain}/handlepayment`,\n      amount: totalPrice,\n      description: JSON.stringify(paymentPayload),\n      merchant_id: 66,\n      secret_key: bcrypt.hashSync(reference_id + secret_key, salt)\n    };\n    const result = await axios.post(`${paymentHost}/invoice/create`, paymentData, {\n      headers: {\n        'Access': 'application/json '\n      }\n    });\n\n    if (result['data']['success']) {\n      let redirectUrl = result['data']['data']['redirect_url'];\n      await router.push(redirectUrl);\n    } else {\n      console.log(result);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, subsriptionsCards.map(card => __jsx(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: styles.cardTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: styles.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, card.id), __jsx(\"span\", {\n    className: styles.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, card.title)), __jsx(\"div\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, card.opportunities.map(title => __jsx(\"div\", {\n    className: styles.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, __jsx(Image, {\n    src: 'violet_galochka.png',\n    className: styles.opportunitiesImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }), __jsx(\"span\", {\n    className: styles.opportunities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, title))))), __jsx(\"div\", {\n    className: styles.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, prettify(card.price), \" KZT\"), __jsx(\"div\", {\n    className: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    className: styles.btn,\n    onClick: () => createPayment(card.id, card.price),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\")))));\n};\n\nexport default SubscriptionCardsWrapper;","map":{"version":3,"sources":["C:/Server/data/htdocs/oilanio-mirror-agarey/src/components/SubscriptionCardsWrapper/index.js"],"names":["styles","useState","Image","bcrypt","globals","default","axios","useRouter","SubscriptionCardsWrapper","prettify","num","n","toString","replace","router","subsriptionsCards","setSubscriptionsCards","id","title","opportunities","price","localStorage","getItem","localStorageKeys","centerId","createPayment","monthCount","totalPrice","reference_id","Math","floor","random","paymentHost","secret_key","salt","genSaltSync","paymentPayload","paymentData","request_url","productionServerDomain","back_url","amount","description","JSON","stringify","merchant_id","hashSync","result","post","headers","redirectUrl","push","console","log","container","map","card","width","cardTop","cardTitle","list","listItem","opportunitiesImage","center","btn"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAO,IAAIC,KAAnB,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AACnC,WAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,QAAIC,CAAC,GAAGD,GAAG,CAACE,QAAJ,EAAR;AACA,WAAOD,CAAC,CAACE,OAAF,CAAU,iCAAV,EAA6C,OAAO,GAApD,CAAP;AACH;;AAED,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,iBAAD;AAAA,OAAoBC;AAApB,MAA6Cf,QAAQ,CAAC,CACxD;AACIgB,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,OAFX;AAGIC,IAAAA,aAAa,EAAE,CAAC,kCAAD,EAAqC,kBAArC,EAAyD,4BAAzD,EAAuF,iBAAvF,EAA0G,kBAA1G,CAHnB;AAIIC,IAAAA,KAAK,EAAGC,YAAY,CAACC,OAAb,CAAqBlB,OAAO,CAACmB,gBAAR,CAAyBC,QAA9C,KAA2D,GAA5D,GAAiE,KAAjE,GAAuE;AAJlF,GADwD,EAOxD;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIC,IAAAA,aAAa,EAAE,CAAC,kCAAD,EAAqC,kBAArC,EAAyD,4BAAzD,EAAuF,iBAAvF,EAA0G,kBAA1G,CAHnB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAPwD,EAaxD;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,SAFX;AAGIC,IAAAA,aAAa,EAAE,CAAC,kCAAD,EAAqC,kBAArC,EAAyD,4BAAzD,EAAuF,iBAAvF,EAA0G,kBAA1G,CAHnB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAbwD,CAAD,CAA3D;;AAqBA,QAAMK,aAAa,GAAG,OAAOC,UAAP,EAAmBC,UAAnB,KAAkC;AACpD,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,IAAqC,CAAxD;AAEA,QAAIC,WAAW,GAAG,oCAAlB;AACA,QAAIC,UAAU,GAAG,sBAAjB;AAEA,UAAMC,IAAI,GAAG/B,MAAM,CAACgC,WAAP,CAAmB,EAAnB,CAAb;AAEA,UAAMC,cAAc,GAAG;AACnBZ,MAAAA,QAAQ,EAAEH,YAAY,CAACC,OAAb,CAAqBlB,OAAO,CAACmB,gBAAR,CAAyBC,QAA9C,CADS;AAEnBE,MAAAA,UAAU,EAAEA;AAFO,KAAvB;AAKA,QAAIW,WAAW,GAAG;AACdT,MAAAA,YAAY,EAAEA,YADA;AAEdU,MAAAA,WAAW,EAAG,GAAElC,OAAO,CAACmC,sBAAuB,gBAFjC;AAGdC,MAAAA,QAAQ,EAAG,GAAEpC,OAAO,CAACmC,sBAAuB,gBAH9B;AAIdE,MAAAA,MAAM,EAAEd,UAJM;AAKde,MAAAA,WAAW,EAAEC,IAAI,CAACC,SAAL,CAAeR,cAAf,CALC;AAMdS,MAAAA,WAAW,EAAE,EANC;AAOdZ,MAAAA,UAAU,EAAE9B,MAAM,CAAC2C,QAAP,CAAgBlB,YAAY,GAAGK,UAA/B,EAA2CC,IAA3C;AAPE,KAAlB;AAUA,UAAMa,MAAM,GAAG,MAAMzC,KAAK,CAAC0C,IAAN,CAChB,GAAEhB,WAAY,iBADE,EAEjBK,WAFiB,EAGjB;AAACY,MAAAA,OAAO,EAAE;AAAC,kBAAU;AAAX;AAAV,KAHiB,CAArB;;AAMA,QAAGF,MAAM,CAAC,MAAD,CAAN,CAAe,SAAf,CAAH,EAA6B;AACzB,UAAIG,WAAW,GAAGH,MAAM,CAAC,MAAD,CAAN,CAAe,MAAf,EAAuB,cAAvB,CAAlB;AACA,YAAMjC,MAAM,CAACqC,IAAP,CAAYD,WAAZ,CAAN;AACH,KAHD,MAGK;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH;AACJ,GAnCD;;AAqCA,SACI;AAAK,IAAA,SAAS,EAAE/C,MAAM,CAACsD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvC,iBAAiB,CAACwC,GAAlB,CAAsBC,IAAI,IACtB;AAAK,IAAA,SAAS,EAAExD,MAAM,CAACwD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEzD,MAAM,CAAC0D,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAE1D,MAAM,CAACiB,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BuC,IAAI,CAACvC,EAAlC,CADJ,EAEI;AAAM,IAAA,SAAS,EAAEjB,MAAM,CAAC2D,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCH,IAAI,CAACtC,KAAzC,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC4D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACrC,aAAL,CAAmBoC,GAAnB,CAAuBrC,KAAK,IACzB;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC6D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAE,qBAAZ;AAAmC,IAAA,SAAS,EAAE7D,MAAM,CAAC8D,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAE9D,MAAM,CAACmB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCD,KAAxC,CAFJ,CADH,CADL,CALJ,CADJ,EAgBI;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACoB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,QAAQ,CAAC+C,IAAI,CAACpC,KAAN,CADb,SAhBJ,EAoBI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAAC+D,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAE/D,MAAM,CAACgE,GADtB;AAEI,IAAA,OAAO,EAAE,MAAMvC,aAAa,CAAC+B,IAAI,CAACvC,EAAN,EAAUuC,IAAI,CAACpC,KAAf,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEADJ,CApBJ,CADJ,CAFR,CADJ;AAmCH,CArGD;;AAuGA,eAAeZ,wBAAf","sourcesContent":["import styles from './style.module.css'\r\nimport {useState} from \"react\";\r\nimport {Image} from \"react-bootstrap\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport globals from \"../../globals\";\r\nimport {default as axios} from \"axios\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nconst SubscriptionCardsWrapper = () => {\r\n    function prettify(num) {\r\n        let n = num.toString();\r\n        return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + ' ');\r\n    }\r\n\r\n    const router = useRouter();\r\n\r\n    const [subsriptionsCards, setSubscriptionsCards] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'Месяц',\r\n            opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\r\n            price: (localStorage.getItem(globals.localStorageKeys.centerId) == 316)?10000:15000\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Месяца',\r\n            opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\r\n            price: 42000\r\n        },\r\n        {\r\n            id: 6,\r\n            title: 'Месяцев',\r\n            opportunities: [\"Неограниченное размещение курсов\", \"Публикация акции\", \"Активация личного кабинета\", \"Рассылка заявок\", \"Обработка заявок\"],\r\n            price: 78000\r\n        },\r\n    ]);\r\n\r\n    const createPayment = async (monthCount, totalPrice) => {\r\n        let reference_id = Math.floor(Math.random() * 999999) + 1;\r\n\r\n        let paymentHost = \"https://finddifferences.club/proxy\";\r\n        let secret_key = \"CbYf5sAuv4VJyFz9cD9x\";\r\n\r\n        const salt = bcrypt.genSaltSync(10);\r\n\r\n        const paymentPayload = {\r\n            centerId: localStorage.getItem(globals.localStorageKeys.centerId),\r\n            monthCount: monthCount,\r\n        }\r\n\r\n        let paymentData = {\r\n            reference_id: reference_id,\r\n            request_url: `${globals.productionServerDomain}/handlepayment`,\r\n            back_url: `${globals.productionServerDomain}/handlepayment`,\r\n            amount: totalPrice,\r\n            description: JSON.stringify(paymentPayload),\r\n            merchant_id: 66,\r\n            secret_key: bcrypt.hashSync(reference_id + secret_key, salt)\r\n        };\r\n\r\n        const result = await axios.post(\r\n            `${paymentHost}/invoice/create`,\r\n            paymentData,\r\n            {headers: {'Access': 'application/json '}}\r\n        );\r\n\r\n        if(result['data']['success']){\r\n            let redirectUrl = result['data']['data']['redirect_url'];\r\n            await router.push(redirectUrl)\r\n        }else{\r\n            console.log(result);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                subsriptionsCards.map(card => (\r\n                    <div className={styles.card}>\r\n                        <div style={{width: \"100%\"}}>\r\n                            <div className={styles.cardTop}>\r\n                                <span className={styles.id}>{card.id}</span>\r\n                                <span className={styles.cardTitle}>{card.title}</span>\r\n                            </div>\r\n                            <div className={styles.list}>\r\n                                {card.opportunities.map(title => (\r\n                                    <div className={styles.listItem}>\r\n                                        <Image src={'violet_galochka.png'} className={styles.opportunitiesImage}/>\r\n                                        <span className={styles.opportunities}>{title}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles.price}>\r\n                            {prettify(card.price)} KZT\r\n                        </div>\r\n\r\n                        <div className={styles.center}>\r\n                            <button\r\n                                className={styles.btn}\r\n                                onClick={() => createPayment(card.id, card.price)}\r\n                            >Подключить</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionCardsWrapper;"]},"metadata":{},"sourceType":"module"}