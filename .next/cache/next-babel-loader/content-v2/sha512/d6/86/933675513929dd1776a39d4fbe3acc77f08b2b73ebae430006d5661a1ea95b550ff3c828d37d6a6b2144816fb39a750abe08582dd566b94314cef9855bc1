{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilanio-mirror\\\\src\\\\components\\\\BecomeAPartnerFormFullPage\\\\BecomeAPartnerFullPage.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport styles from './BecomeAPartner.module.css';\nimport classnames from 'classnames';\nimport PhoneInput from \"react-phone-number-input/input\";\nimport React, { useState } from \"react\";\nimport 'react-phone-number-input/style.css';\nimport kz from 'react-phone-number-input/locale/ru.json';\nimport { Image } from \"react-bootstrap\";\nimport globals from \"../../globals\";\n\nvar axios = require('axios')[\"default\"];\n\nexport default function BecomeAPartnerFullPage(props) {\n  _s();\n\n  var _useState = useState(null),\n      messageForUser = _useState[0],\n      setMessageForUser = _useState[1];\n\n  var _useState2 = useState(null),\n      subMessageForUser = _useState2[0],\n      setSubMessageForUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      submitButtonPressed = _useState3[0],\n      setSubmitButtonPressed = _useState3[1];\n\n  var _useState4 = useState(false),\n      successfulApplication = _useState4[0],\n      setSuccessfulApplication = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      companyName = _useState5[0],\n      setCompanyName = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      contactName = _useState6[0],\n      setContactName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      phone = _useState7[0],\n      setPhone = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      message = _useState9[0],\n      setMessage = _useState9[1];\n\n  return __jsx(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.goBack,\n    onClick: function onClick() {\n      props.close(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: '/left-arrow.png',\n    className: styles.goBackImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), __jsx(\"h1\", {\n    className: styles.main_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u044C \\u043F\\u0430\\u0440\\u0442\\u043D\\u0435\\u0440\\u043E\\u043C \", __jsx(\"span\", {\n    className: styles.orange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 63\n    }\n  }, \"Oilan.io\")), __jsx(\"div\", {\n    style: {\n      marginTop: 40\n    },\n    className: styles.techSupportInputsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: 'Наименование компании',\n    onChange: function onChange(e) {\n      setCompanyName(e.target.value);\n    },\n    className: styles.techSupportInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    className: styles.techSupportInput,\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === 8) {\n        setPhone(phone.slice(0, -1));\n      }\n    },\n    onChange: function onChange(e) {\n      return globals.checkPhoneMask(e.target.value, setPhone);\n    },\n    placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: 'Ваш email',\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n    },\n    className: styles.techSupportInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: 'Контактное лицо',\n    onChange: function onChange(e) {\n      setContactName(e.target.value);\n    },\n    className: styles.techSupportInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), __jsx(\"span\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, messageForUser, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), subMessageForUser), __jsx(\"div\", {\n    className: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: styles.button,\n    onClick: function onClick() {\n      if (companyName === '') {\n        setMessageForUser(\"Заполните все поля!\");\n        setSubMessageForUser(\"Введите имя!\");\n      } else if (phone === '') {\n        setMessageForUser(\"Заполните все поля!\");\n        setSubMessageForUser(\"Введите телефон!\");\n      } else if (email === '') {\n        setMessageForUser(\"Заполните все поля!\");\n        setSubMessageForUser(\"Введите почту!\");\n      } else if (contactName === '') {\n        setMessageForUser(\"Заполните все поля!\");\n        setSubMessageForUser(\"Введите описание!\");\n      } else {\n        var data = {\n          company_name: companyName,\n          fullname: contactName,\n          phone: phone,\n          email: email\n        };\n        axios.post(\"\".concat(globals.productionServerDomain, \"/partnershipRequests\"), data).then(function (res) {\n          setSuccessfulApplication(true);\n          setMessageForUser('Ваша заявка сохранена!');\n          setSubMessageForUser('Проверьте электронную почту!');\n          setSubmitButtonPressed(true);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, submitButtonPressed ? 'Заявка отправлена!' : 'Оставить заявку')));\n}\n\n_s(BecomeAPartnerFullPage, \"B54OOhOTWZF13n9okg10X83ra0M=\");\n\n_c = BecomeAPartnerFullPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BecomeAPartnerFullPage\");","map":{"version":3,"sources":["C:/Server/data/htdocs/oilanio-mirror/src/components/BecomeAPartnerFormFullPage/BecomeAPartnerFullPage.js"],"names":["styles","classnames","PhoneInput","React","useState","kz","Image","globals","axios","require","BecomeAPartnerFullPage","props","messageForUser","setMessageForUser","subMessageForUser","setSubMessageForUser","submitButtonPressed","setSubmitButtonPressed","successfulApplication","setSuccessfulApplication","companyName","setCompanyName","contactName","setContactName","phone","setPhone","email","setEmail","message","setMessage","body","goBack","close","goBackImg","main_title","orange","marginTop","techSupportInputsWrapper","e","target","value","techSupportInput","keyCode","slice","checkPhoneMask","center","button","data","company_name","fullname","post","productionServerDomain","then","res"],"mappings":"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","sourcesContent":["import styles from './BecomeAPartner.module.css'\r\nimport classnames from 'classnames'\r\nimport PhoneInput from \"react-phone-number-input/input\";\r\nimport React, {useState} from \"react\";\r\nimport 'react-phone-number-input/style.css'\r\nimport kz from 'react-phone-number-input/locale/ru.json'\r\nimport {Image} from \"react-bootstrap\";\r\nimport globals from \"../../globals\";\r\n\r\nconst axios = require('axios').default;\r\nexport default function BecomeAPartnerFullPage(props){\r\n    const [messageForUser, setMessageForUser] = useState(null);\r\n    const [subMessageForUser, setSubMessageForUser] = useState(null);\r\n    const [submitButtonPressed, setSubmitButtonPressed] = useState(false);\r\n    const [successfulApplication, setSuccessfulApplication] = useState(false);\r\n\r\n\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [contactName, setContactName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage]= useState(\"\");\r\n\r\n    return(\r\n        <div className={styles.body}>\r\n            <div className={styles.goBack} onClick={()=>{\r\n                props.close(false)\r\n            }}>\r\n                <Image src={'/left-arrow.png'} className={styles.goBackImg}/>\r\n            </div>\r\n            <h1 className={styles.main_title}>Стать партнером <span className={styles.orange}>Oilan.io</span></h1>\r\n\r\n            <div style={{marginTop: 40}} className={styles.techSupportInputsWrapper}>\r\n                <input type=\"text\" placeholder={'Наименование компании'} onChange={(e)=>{\r\n                    setCompanyName(e.target.value)\r\n                }} className={styles.techSupportInput}/>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    className={styles.techSupportInput}\r\n                    onKeyDown={e => {\r\n                        if(e.keyCode === 8){\r\n                            setPhone(phone.slice(0,-1));\r\n                        }\r\n                    }}\r\n                    onChange={e => globals.checkPhoneMask(e.target.value, setPhone)}\r\n                    placeholder='Номер телефона'\r\n                    value={phone}\r\n                />\r\n\r\n                <input type=\"text\" placeholder={'Ваш email'} onChange={(e)=>{\r\n                    setEmail(e.target.value)\r\n                }} className={styles.techSupportInput}/>\r\n\r\n                <input type=\"text\" placeholder={'Контактное лицо'} onChange={(e)=>{\r\n                    setContactName(e.target.value)\r\n                }} className={styles.techSupportInput}/>\r\n\r\n            </div>\r\n            <span className={styles.message}>\r\n                {messageForUser}\r\n                <br/>\r\n                {subMessageForUser}\r\n            </span>\r\n            <div className={styles.center}>\r\n                <button className={styles.button}\r\n                        onClick={()=>{\r\n                            if(companyName === ''){\r\n                                setMessageForUser(\"Заполните все поля!\");\r\n                                setSubMessageForUser(\"Введите имя!\");\r\n                            }\r\n                            else if(phone === ''){\r\n                                setMessageForUser(\"Заполните все поля!\");\r\n                                setSubMessageForUser(\"Введите телефон!\");\r\n                            }\r\n                            else if(email === ''){\r\n                                setMessageForUser(\"Заполните все поля!\");\r\n                                setSubMessageForUser(\"Введите почту!\");\r\n                            }\r\n                            else if(contactName === ''){\r\n                                setMessageForUser(\"Заполните все поля!\");\r\n                                setSubMessageForUser(\"Введите описание!\");\r\n                            }\r\n                            else{\r\n                                const data = {\r\n                                    company_name: companyName,\r\n                                    fullname: contactName,\r\n                                    phone: phone,\r\n                                    email: email\r\n                                };\r\n\r\n                                axios.post(`${globals.productionServerDomain}/partnershipRequests`, data).then(res => {\r\n                                    setSuccessfulApplication(true);\r\n                                    setMessageForUser('Ваша заявка сохранена!');\r\n                                    setSubMessageForUser('Проверьте электронную почту!');\r\n                                    setSubmitButtonPressed(true);\r\n                                });\r\n                        }}}\r\n                >{submitButtonPressed ? ('Заявка отправлена!') : ('Оставить заявку')}</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}