{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilanio-mirror\\\\src\\\\components\\\\ModeratorBlock\\\\ModeratorBlock.js\";\nvar __jsx = React.createElement;\nimport styles from \"./ModeratorBlock.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { default as axios } from \"axios\";\nimport globals from \"../../globals\";\nimport { useRouter } from \"next/router\";\nimport LoadingBlock from \"../LoadingBlock\";\nimport ModerateCourseCard from \"../ModerateCourseCard/ModerateCourseCard\";\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\nimport CardsList from \"./CardsList\";\nimport Pagination from \"./Pagination\";\n\nconst ModeratorBlock = () => {\n  // счетчики карточек по типу\n  const {\n    0: allCardsCount,\n    1: setAllCardsCount\n  } = useState(0);\n  const {\n    0: verifiedCardsCount,\n    1: setVerifiedCardsCount\n  } = useState(0);\n  const {\n    0: notVerifiedCardsCount,\n    1: setNotVerifiedCardsCount\n  } = useState(0);\n  const {\n    0: redCardsCount,\n    1: setRedCardsCount\n  } = useState(0);\n  const {\n    0: yellowCardsCount,\n    1: setYellowCardsCount\n  } = useState(0);\n  const {\n    0: byCenterCardsCount,\n    1: setByCenterCardsCount\n  } = useState(0); // выбранный радио баттон\n\n  const {\n    0: allCardsChecked,\n    1: setAllCardsChecked\n  } = useState(true);\n  const {\n    0: verifiedCardsChecked,\n    1: setVerifiedCardsChecked\n  } = useState(false);\n  const {\n    0: notVerifiedCardsChecked,\n    1: setNotVerifiedCardsChecked\n  } = useState(false);\n  const {\n    0: redCardsChecked,\n    1: setRedCardsChecked\n  } = useState(false);\n  const {\n    0: yellowCardsChecked,\n    1: setYellowCardsChecked\n  } = useState(false);\n  const {\n    0: cardsByCenterIdChecked,\n    1: setCardsByCenterIdChecked\n  } = useState(false); // текущий выбранный список карточек\n\n  const {\n    0: currentList,\n    1: setCurrentList\n  } = useState([]);\n  const {\n    0: allCardsList,\n    1: setAllCardsList\n  } = useState([]);\n  const {\n    0: redList,\n    1: setRedList\n  } = useState([]);\n  const {\n    0: yellowList,\n    1: setYellowList\n  } = useState([]);\n  const {\n    0: verificatedList,\n    1: setVerificatedList\n  } = useState([]);\n  const {\n    0: notVerificatedList,\n    1: setNotVerificatedList\n  } = useState([]);\n  const {\n    0: byCenterIdList,\n    1: setByCenterIdList\n  } = useState([]);\n  const {\n    0: selectedCenterId,\n    1: setSelectedCenterId\n  } = useState(0);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState([]);\n  const {\n    0: coursesLoading,\n    1: setCoursesLoading\n  } = useState(false);\n  const {\n    0: loadingModal,\n    1: setLoadingModal\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: cardsPerPage\n  } = useState(10);\n  useEffect(async () => {\n    await loadFilters();\n    await loadCourseCards(); // countCardLists();\n  }, []);\n  useEffect(() => {\n    countCardLists();\n  }, [allCardsList]);\n\n  const loadFilters = async () => {\n    let result = await axios.get(`${globals.productionServerDomain}/filters`);\n    setFilters(result.data);\n  };\n\n  const loadCourseCards = async () => {\n    setCoursesLoading(true);\n    let result = await axios.get(`${globals.productionServerDomain}/courseCards/`).then(result => {\n      setAllCardsList(result.data);\n      setCurrentList(result.data);\n    }); // alert(\"data loaded\")\n\n    setCoursesLoading(false); // setAllCardsList(prevValue => {\n    //   return result.data;\n    // })\n    // setAllCardsList(result.data);\n    // setCurrentList(allCardsList)\n    // setCurrentList(allCardsList);\n    // console.log(`current list:`, currentList);\n  };\n\n  const countCardLists = () => {\n    setAllCardsCount(allCardsList.length);\n    setRedCardsCount(0);\n    setYellowCardsCount(0);\n    setVerifiedCardsCount(0);\n    setNotVerifiedCardsCount(0);\n    setByCenterCardsCount(0);\n    allCardsList.forEach(function (course) {\n      if (!course.title || !course.addresses || !course.ages || !course.category || !course.course_desc || !course.course_title || !course.description || !course.format || !course.img_src || !course.phones || !course.price || !course.schedule || !course.type) {\n        // setRedList(prevValue => {\n        //   return [...prevValue, course];\n        // })\n        // redList.push(course);\n        // console.log(course)\n        // console.log(redCardsCount)\n        setRedCardsCount(prevValue => {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (course.verificated) {\n        setVerifiedCardsCount(prevValue => {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (!course.verificated) {\n        setNotVerifiedCardsCount(prevValue => {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (course.course_id == selectedCenterId) {\n        setByCenterCardsCount(prevValue => {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      const str = String(course.img_src);\n      const substr = \"realibi\";\n      const checkLink = str.includes(substr);\n\n      if (course.title == course.description && course.title || course.title == course.course_desc && course.title || course.description == course.course_desc && course.description || course.ages == \" - \" || course.img_src && !checkLink) {\n        // setYellowList(prevValue => {\n        //   return [...prevValue, course];\n        // })\n        // yellowList.push(course);\n        setYellowCardsCount(prevValue => {\n          return prevValue += 1;\n        });\n      }\n    });\n  };\n\n  const onListLoaded = list => {\n    setCurrentList(prevValue => {\n      return list;\n    });\n  }; // useEffect(() => {\n  //   console.log('selectedCenterId: ', selectedCenterId)\n  // }, [selectedCenterId])\n\n\n  useEffect(async () => {\n    if (allCardsChecked) {\n      // console.log(`allCardsChecked`);\n      const result = await axios.get(`${globals.productionServerDomain}/courseCards/`);\n      const list = result.data;\n      setCurrentPage(1); //загрузить все карточки\n\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n      setCurrentList(allCardsList); // console.log\n    } else if (verifiedCardsChecked) {\n      // console.log(`verifiedCardsChecked`);\n      const result = await axios.get(`${globals.productionServerDomain}/verificatedCourseCards/`);\n      const list = result.data;\n      setCurrentPage(1);\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n    } else if (notVerifiedCardsChecked) {\n      // console.log(`notVerifiedCardsChecked`);\n      //загрузить не верифицированные карточки\n      const result = await axios.get(`${globals.productionServerDomain}/notVerificatedCourseCards/`);\n      const list = result.data;\n      setCurrentPage(1);\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n    } else if (redCardsChecked) {\n      // console.log(`redCardsChecked`);\n      //загрузить красные карточки\n      const result = await axios.get(`${globals.productionServerDomain}/courseCards/`);\n      setCurrentPage(1);\n      let list = result.data.filter(course => {\n        if (!course.title || !course.addresses || !course.ages || !course.category || !course.course_desc || !course.course_title || !course.description || !course.format || !course.img_src || !course.phones || !course.price || !course.schedule || !course.type) {\n          return course;\n        }\n      });\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n    } else if (yellowCardsChecked) {\n      // console.log(`yellowCardsChecked`);\n      const result = await axios.get(`${globals.productionServerDomain}/courseCards/`); //загрузить желтые карточки\n\n      const substr = \"realibi\";\n      setCurrentPage(1);\n      let list = result.data.filter(course => {\n        const str = String(course.img_src);\n        const checkLink = str.includes(substr);\n\n        if (course.title == course.description && course.title || course.title == course.course_desc && course.title || course.description == course.course_desc && course.description || course.ages == \" - \" || course.img_src && !checkLink) {\n          return course;\n        }\n      });\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n    } else if (cardsByCenterIdChecked) {\n      // console.log(`cardsByCenterIdChecked`);\n      setCurrentPage(1); // загрузить карточки центра\n\n      const centerId = selectedCenterId; // console.log(`center id: `, centerId)\n\n      const result = await axios.get(`${globals.productionServerDomain}/courseCardsByCenterId/${centerId}`);\n      const list = result.data;\n      setByCenterCardsCount(list.length);\n      setCurrentList([]);\n      setCurrentList(() => {\n        return [...list];\n      });\n    }\n  }, [allCardsChecked, verifiedCardsChecked, notVerifiedCardsChecked, redCardsChecked, yellowCardsChecked, cardsByCenterIdChecked, selectedCenterId]);\n  useEffect(() => {// console.log(currentCards);\n  }, [currentCards]);\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = currentList.slice(indexOfFirstCard, indexOfLastCard);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.filterArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.leftArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 (\", allCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"allCardsChecked\",\n    onClick: () => {\n      setAllCardsChecked(true);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: allCardsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0443\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 (\", verifiedCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"verificatedChecked\",\n    onClick: () => {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(true);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: verifiedCardsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u043D\\u0435 \\u0443\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 (\", notVerifiedCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"notVerificatedChecked\",\n    onClick: () => {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(true);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: notVerifiedCardsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: styles.rightArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, \"\\u0421 \\u043D\\u0435\\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043D\\u044B\\u043C\\u0438 \\u043F\\u043E\\u043B\\u044F\\u043C\\u0438 (\", redCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: () => {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(true);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: redCardsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, \"\\u0421 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u043C\\u0438 \\u0438\\u043B\\u0438 \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u044F\\u044E\\u0449\\u0438\\u043C\\u0438\\u0441\\u044F \\u043F\\u043E\\u043B\\u044F\\u043C\\u0438 (\", yellowCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: () => {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(true);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: yellowCardsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0446\\u0435\\u043D\\u0442\\u0440\\u0443 (\", byCenterCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: () => {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(true); // onRadioButtonClicked();\n    },\n    checked: cardsByCenterIdChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }), __jsx(\"select\", {\n    disabled: !cardsByCenterIdChecked,\n    className: styles.wrapperItemInput,\n    onChange: e => setSelectedCenterId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, filters[2] !== undefined ? filters[2].map(filterOption => filterOption.title !== \"test\" ? __jsx(\"option\", {\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, filterOption.title) : null) : null)))), currentCards.length > 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, __jsx(CardsList, {\n    currentCards: currentCards,\n    setLoadingModal: setLoadingModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, __jsx(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: currentList.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ModeratorBlock;","map":{"version":3,"sources":["C:/Server/data/htdocs/oilanio-mirror/src/components/ModeratorBlock/ModeratorBlock.js"],"names":["styles","React","useEffect","useState","default","axios","globals","useRouter","LoadingBlock","ModerateCourseCard","CourseSearchResultIsNotDefind","CardsList","Pagination","ModeratorBlock","allCardsCount","setAllCardsCount","verifiedCardsCount","setVerifiedCardsCount","notVerifiedCardsCount","setNotVerifiedCardsCount","redCardsCount","setRedCardsCount","yellowCardsCount","setYellowCardsCount","byCenterCardsCount","setByCenterCardsCount","allCardsChecked","setAllCardsChecked","verifiedCardsChecked","setVerifiedCardsChecked","notVerifiedCardsChecked","setNotVerifiedCardsChecked","redCardsChecked","setRedCardsChecked","yellowCardsChecked","setYellowCardsChecked","cardsByCenterIdChecked","setCardsByCenterIdChecked","currentList","setCurrentList","allCardsList","setAllCardsList","redList","setRedList","yellowList","setYellowList","verificatedList","setVerificatedList","notVerificatedList","setNotVerificatedList","byCenterIdList","setByCenterIdList","selectedCenterId","setSelectedCenterId","filters","setFilters","coursesLoading","setCoursesLoading","loadingModal","setLoadingModal","currentPage","setCurrentPage","cardsPerPage","loadFilters","loadCourseCards","countCardLists","result","get","productionServerDomain","data","then","length","forEach","course","title","addresses","ages","category","course_desc","course_title","description","format","img_src","phones","price","schedule","type","prevValue","verificated","course_id","str","String","substr","checkLink","includes","onListLoaded","list","filter","centerId","currentCards","indexOfLastCard","indexOfFirstCard","slice","paginate","pageNumber","filterArea","leftArea","moderate","rightArea","wrapperItemInput","e","target","value","undefined","map","filterOption","id","width"],"mappings":"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","sourcesContent":["import styles from \"./ModeratorBlock.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { default as axios } from \"axios\";\r\nimport globals from \"../../globals\";\r\nimport { useRouter } from \"next/router\";\r\nimport LoadingBlock from \"../LoadingBlock\";\r\nimport ModerateCourseCard from \"../ModerateCourseCard/ModerateCourseCard\";\r\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\r\nimport CardsList from \"./CardsList\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst ModeratorBlock = () => {\r\n  // счетчики карточек по типу\r\n  const [allCardsCount, setAllCardsCount] = useState(0);\r\n  const [verifiedCardsCount, setVerifiedCardsCount] = useState(0);\r\n  const [notVerifiedCardsCount, setNotVerifiedCardsCount] = useState(0);\r\n  const [redCardsCount, setRedCardsCount] = useState(0);\r\n  const [yellowCardsCount, setYellowCardsCount] = useState(0);\r\n  const [byCenterCardsCount, setByCenterCardsCount] = useState(0);\r\n\r\n  // выбранный радио баттон\r\n  const [allCardsChecked, setAllCardsChecked] = useState(true);\r\n  const [verifiedCardsChecked, setVerifiedCardsChecked] = useState(false);\r\n  const [notVerifiedCardsChecked, setNotVerifiedCardsChecked] = useState(false);\r\n  const [redCardsChecked, setRedCardsChecked] = useState(false);\r\n  const [yellowCardsChecked, setYellowCardsChecked] = useState(false);\r\n  const [cardsByCenterIdChecked, setCardsByCenterIdChecked] = useState(false);\r\n\r\n  // текущий выбранный список карточек\r\n  const [currentList, setCurrentList] = useState([]);\r\n  const [allCardsList, setAllCardsList] = useState([]);\r\n  const [redList, setRedList] = useState([]);\r\n  const [yellowList, setYellowList] = useState([]);\r\n  const [verificatedList, setVerificatedList] = useState([]);\r\n  const [notVerificatedList, setNotVerificatedList] = useState([]);\r\n  const [byCenterIdList, setByCenterIdList] = useState([]);\r\n\r\n  const [selectedCenterId, setSelectedCenterId] = useState(0);\r\n\r\n  const [filters, setFilters] = useState([]);\r\n\r\n  const [coursesLoading, setCoursesLoading] = useState(false);\r\n\r\n  const [loadingModal, setLoadingModal] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage] = useState(10);\r\n\r\n  useEffect(async () => {\r\n    await loadFilters();\r\n    await loadCourseCards();\r\n    // countCardLists();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    countCardLists();\r\n  }, [allCardsList]);\r\n\r\n  const loadFilters = async () => {\r\n    let result = await axios.get(`${globals.productionServerDomain}/filters`);\r\n    setFilters(result.data);\r\n  };\r\n\r\n  const loadCourseCards = async () => {\r\n    setCoursesLoading(true);\r\n    let result = await axios\r\n      .get(`${globals.productionServerDomain}/courseCards/`)\r\n      .then((result) => {\r\n        setAllCardsList(result.data);\r\n        setCurrentList(result.data);\r\n      });\r\n    // alert(\"data loaded\")\r\n    setCoursesLoading(false);\r\n    // setAllCardsList(prevValue => {\r\n    //   return result.data;\r\n    // })\r\n    // setAllCardsList(result.data);\r\n    // setCurrentList(allCardsList)\r\n    // setCurrentList(allCardsList);\r\n    // console.log(`current list:`, currentList);\r\n  };\r\n\r\n  const countCardLists = () => {\r\n    setAllCardsCount(allCardsList.length);\r\n\r\n    setRedCardsCount(0);\r\n    setYellowCardsCount(0);\r\n    setVerifiedCardsCount(0);\r\n    setNotVerifiedCardsCount(0);\r\n    setByCenterCardsCount(0);\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (\r\n        !course.title ||\r\n        !course.addresses ||\r\n        !course.ages ||\r\n        !course.category ||\r\n        !course.course_desc ||\r\n        !course.course_title ||\r\n        !course.description ||\r\n        !course.format ||\r\n        !course.img_src ||\r\n        !course.phones ||\r\n        !course.price ||\r\n        !course.schedule ||\r\n        !course.type\r\n      ) {\r\n        // setRedList(prevValue => {\r\n        //   return [...prevValue, course];\r\n        // })\r\n        // redList.push(course);\r\n        // console.log(course)\r\n        // console.log(redCardsCount)\r\n        setRedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (course.verificated) {\r\n        setVerifiedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (!course.verificated) {\r\n        setNotVerifiedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (course.course_id == selectedCenterId) {\r\n        setByCenterCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      const str = String(course.img_src);\r\n      const substr = \"realibi\";\r\n      const checkLink = str.includes(substr);\r\n      if (\r\n        (course.title == course.description && course.title) ||\r\n        (course.title == course.course_desc && course.title) ||\r\n        (course.description == course.course_desc && course.description) ||\r\n        course.ages == \" - \" ||\r\n        (course.img_src && !checkLink)\r\n      ) {\r\n        // setYellowList(prevValue => {\r\n        //   return [...prevValue, course];\r\n        // })\r\n        // yellowList.push(course);\r\n        setYellowCardsCount((prevValue) => {\r\n          return (prevValue += 1);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onListLoaded = (list) => {\r\n    setCurrentList((prevValue) => {\r\n      return list;\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log('selectedCenterId: ', selectedCenterId)\r\n  // }, [selectedCenterId])\r\n\r\n  useEffect(async () => {\r\n    if (allCardsChecked) {\r\n      // console.log(`allCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      //загрузить все карточки\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list]\r\n      })\r\n      setCurrentList(allCardsList);\r\n      // console.log\r\n    } else if (verifiedCardsChecked) {\r\n      // console.log(`verifiedCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/verificatedCourseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (notVerifiedCardsChecked) {\r\n      // console.log(`notVerifiedCardsChecked`);\r\n      //загрузить не верифицированные карточки\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/notVerificatedCourseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (redCardsChecked) {\r\n      // console.log(`redCardsChecked`);\r\n      //загрузить красные карточки\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      setCurrentPage(1);\r\n      let list = result.data.filter((course) => {\r\n        if (\r\n          !course.title ||\r\n          !course.addresses ||\r\n          !course.ages ||\r\n          !course.category ||\r\n          !course.course_desc ||\r\n          !course.course_title ||\r\n          !course.description ||\r\n          !course.format ||\r\n          !course.img_src ||\r\n          !course.phones ||\r\n          !course.price ||\r\n          !course.schedule ||\r\n          !course.type\r\n        ) {\r\n          return course;\r\n        }\r\n      });\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (yellowCardsChecked) {\r\n      // console.log(`yellowCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      //загрузить желтые карточки\r\n      const substr = \"realibi\";\r\n      setCurrentPage(1);\r\n      let list = result.data.filter((course) => {\r\n        const str = String(course.img_src);\r\n        const checkLink = str.includes(substr);\r\n        if (\r\n          (course.title == course.description && course.title) ||\r\n          (course.title == course.course_desc && course.title) ||\r\n          (course.description == course.course_desc && course.description) ||\r\n          course.ages == \" - \" ||\r\n          (course.img_src && !checkLink)\r\n        ) {\r\n          return course;\r\n        }\r\n      });\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (cardsByCenterIdChecked) {\r\n      // console.log(`cardsByCenterIdChecked`);\r\n      setCurrentPage(1);\r\n      // загрузить карточки центра\r\n      const centerId = selectedCenterId;\r\n      // console.log(`center id: `, centerId)\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCardsByCenterId/${centerId}`\r\n      );\r\n      const list = result.data\r\n      setByCenterCardsCount(list.length)\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list]\r\n      });\r\n    }\r\n  }, [\r\n    allCardsChecked,\r\n    verifiedCardsChecked,\r\n    notVerifiedCardsChecked,\r\n    redCardsChecked,\r\n    yellowCardsChecked,\r\n    cardsByCenterIdChecked,\r\n    selectedCenterId\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // console.log(currentCards);\r\n  }, [currentCards]);\r\n\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  const currentCards = currentList.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.filterArea}>\r\n        <div className={styles.leftArea}>\r\n          <p className={styles.moderate}>\r\n            <b>Все карточки ({allCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"allCardsChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(true);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={allCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Только утвержденные ({verifiedCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"verificatedChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(true);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={verifiedCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Только не утвержденные ({notVerifiedCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"notVerificatedChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(true);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={notVerifiedCardsChecked}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className={styles.rightArea}>\r\n          <p className={styles.moderate}>\r\n            <b>С незаполненными полями ({redCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(true);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={redCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>С неверными или повторяющимися полями ({yellowCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(true);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={yellowCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Поиск по центру ({byCenterCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(true);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={cardsByCenterIdChecked}\r\n            />\r\n            <select\r\n              disabled={!cardsByCenterIdChecked}\r\n              className={styles.wrapperItemInput}\r\n              onChange={(e) => setSelectedCenterId(e.target.value)}\r\n            >\r\n              {filters[2] !== undefined\r\n                ? filters[2].map((filterOption) =>\r\n                    filterOption.title !== \"test\" ? (\r\n                      <option value={filterOption.id}>\r\n                        {filterOption.title}\r\n                      </option>\r\n                    ) : null\r\n                  )\r\n                : null}\r\n            </select>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {currentCards.length > 0 && (\r\n        <div>\r\n          <CardsList currentCards={currentCards} setLoadingModal={setLoadingModal}/>\r\n          <div style={{width: \"100%\"}}>\r\n            <Pagination cardsPerPage={cardsPerPage} totalCards={currentList.length} paginate={paginate} currentPage={currentPage}/>\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeratorBlock;\r\n"]},"metadata":{},"sourceType":"module"}