{"ast":null,"code":"var _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilan-mirror\\\\goco\\\\pages\\\\courses\\\\index.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Header from '../../src/components/Header/Header';\nimport styles from \"../../styles/components/content/Courses.module.css\";\nimport CourseCard from \"../../src/components/CourseCard/CourseCard\";\nimport HorizontalLine from \"../../src/components/HorizontalLine/HorizaontalLine\";\nimport Footer from \"../../src/components/Footer/Footer\";\nimport React, { useState, useEffect } from \"react\";\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css';\nimport SimpleSlider from \"../../src/components/SimpleSlider/SimpleSlider\";\nimport StockCard from \"../../src/components/StockCard/StockCard\";\nimport ContactButton from \"../../src/components/ContactButton/ContactButton\";\nimport { useContext } from \"react\";\nimport UserContext from \"../../src/userContext\";\nimport globals from \"../../src/globals\";\nimport EditCourseCard from \"../../src/components/EditCourseCard/EditCourseCard\";\nimport Loading from \"../../src/components/Loading/Loading\";\nimport classnames from 'classnames';\nimport { useLongPress } from 'use-long-press';\nimport { ContactForm } from \"../../src/components/Forms/ContactForm/ContactForm\";\nimport ModalWindow from \"../../src/components/Modal/ModalWindow\";\nimport { SubscriptionPaymentForm } from \"../../src/components/Forms/SubscriptionPaymentForm/SubscriptionPaymentForm\";\nimport { CourseSearchForm } from \"../../src/components/Forms/CourseSearchForm/CourseSearchForm\";\nimport TutorCourseCard from \"../../src/components/TutorCourseCard\";\nimport CourseSearchResultIsNotDefind from \"../../src/components/CourseSearchResultIsNotDefind\";\n\nconst ym = () => {\n  return \"<!-- Yandex.Metrika counter -->\\n\" + \"<script type=\\\"text/javascript\\\" >\\n\" + \"   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};\\n\" + \"   m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})\\n\" + \"   (window, document, \\\"script\\\", \\\"https://mc.yandex.ru/metrika/tag.js\\\", \\\"ym\\\");\\n\" + \"\\n\" + \"   ym(78186067, \\\"init\\\", {\\n\" + \"        clickmap:true,\\n\" + \"        trackLinks:true,\\n\" + \"        accurateTrackBounce:true,\\n\" + \"        webvisor:true,\\n\" + \"        ecommerce:\\\"dataLayer\\\"\\n\" + \"   });\\n\" + \"</script>\\n\" + \"<noscript><div><img src=\\\"https://mc.yandex.ru/watch/78186067\\\" style=\\\"position:absolute; left:-9999px;\\\" alt=\\\"\\\" /></div></noscript>\\n\" + \"<!-- /Yandex.Metrika counter -->\";\n};\n\nconst axios = require('axios').default;\n\nfunction Courses({\n  props\n}) {\n  const {\n    0: cityId,\n    1: setCityId\n  } = useState(0);\n  const {\n    0: directionId,\n    1: setDirectionId\n  } = useState(0);\n  const {\n    0: isOnline,\n    1: setIsOnline\n  } = useState(0);\n  const {\n    0: courseId,\n    1: setCourseId\n  } = useState(0);\n  const {\n    0: searchingTutors,\n    1: setSearchingTutors\n  } = useState(false);\n  const {\n    0: courseCards,\n    1: setCourseCards\n  } = useState(null);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: loadingModal,\n    1: setLoadingModal\n  } = useState(false);\n  const {\n    0: openMoreSort,\n    1: setOpenMoreSort\n  } = useState(false);\n  const {\n    0: hideSort,\n    1: setHideSort\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(0);\n  const {\n    0: cardsNum,\n    1: setCardsNum\n  } = useState(12);\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState(0);\n  const {\n    0: lessonType,\n    1: setLessonType\n  } = useState(0);\n  const {\n    0: currentCourseCategory,\n    1: setCurrentCourseCategory\n  } = useState(\"Найденные курсы\");\n  const {\n    0: tempCategoryId,\n    1: setTempCategoryId\n  } = useState(\"Все направления\");\n  const {\n    0: imagesBase,\n    1: setImagesBase\n  } = useState([]);\n\n  const loadCourseCards = async () => {\n    setLoading(true);\n    let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\n    setImagesBase(imagesBaseResponse.data);\n    let result = await axios.get(`${globals.productionServerDomain}/courseCards/`).then(() => {\n      setCourseCards(result.data);\n    }).then(() => {\n      setLoading(false);\n    });\n  };\n\n  const filterBtnHandler = async (centerName, city, direction, price, center, isOnline, sortType, searchingCenterValue) => {\n    setLoading(true);\n    searchingCenterValue = Boolean(Number(searchingCenterValue));\n    let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\n    setImagesBase(imagesBaseResponse.data);\n    console.log('images', imagesBase);\n    const data = {\n      centerName: centerName,\n      city: city.toString(),\n      direction: direction.toString(),\n      price: price.toString(),\n      center: center.toString(),\n      isOnline: isOnline.toString(),\n      //individualLesson: individualLesson,\n      sortType: sortType.toString()\n    };\n    let query = `${globals.productionServerDomain}/${searchingCenterValue ? 'courseCardsFilter' : 'tutorCourseCardsFilter'}/`;\n    console.log('query', query);\n    let postResult = await axios.post(query, data);\n    console.log('course cards');\n    console.log(postResult.data);\n    setCourseCards(postResult.data);\n    setLoading(false);\n    setOpenMoreSort(true);\n  };\n\n  const {\n    0: searchingCenterState,\n    1: setSearchingCenterState\n  } = useState(true);\n  useEffect(async () => {\n    setLoading(true);\n    const params = new URLSearchParams(window.location.search);\n    console.log('params', params);\n    let centerName = params.get('centerName');\n    let direction = null;\n    let city = null;\n    let price = null;\n    let isOnline = null;\n    let center = null;\n    let searchingCenter = Number(params.get('searchingCenter'));\n    setSearchingCenterState(Boolean(searchingCenter));\n\n    if (params.has('direction')) {\n      direction = params.get('direction');\n      setDirectionId(Number(direction)); //document.getElementById(\"directionSelect\").value = direction.toString();\n    }\n\n    if (params.has('city')) {\n      city = params.get('city');\n      setCityId(Number(city)); //document.getElementById(\"citySelect\").value = city.toString();\n    }\n\n    if (params.has('price')) {\n      price = params.get('price');\n      setDirectionId(Number(direction)); //document.getElementById(\"priceSelect\").value = price;\n    }\n\n    if (params.has('isOnline')) {\n      isOnline = params.get('isOnline');\n      setIsOnline(Number(isOnline)); //document.getElementById(\"isOnlineSelect\").value = isOnline;\n    }\n\n    if (params.has('center')) {\n      center = params.get('center'); //document.getElementById(\"centerSelect\").value = center;\n    }\n\n    if (direction !== null || city !== null || price !== null || isOnline !== null || center !== null) {\n      filterBtnHandler(centerName, city === null ? 0 : Number(city), direction === null ? 0 : Number(direction), price === null ? 0 : price, center === null ? 0 : center, isOnline === null ? 0 : isOnline, 'price asc', searchingCenter).then(() => {\n        console.log('searching center', searchingCenter);\n\n        if (searchingCenter === 0) {\n          setSearchingTutors(true);\n        } else {\n          setSearchingTutors(false);\n        }\n\n        console.log(\"searching tutors\", searchingTutors);\n      });\n    } else {\n      loadCourseCards().then(() => setLoading(false));\n    }\n\n    axios.get(`${globals.productionServerDomain}/filters`).then(res => {\n      setFilters(res.data);\n      console.log(res);\n    });\n    document.querySelector('#page_top').scrollIntoView({\n      behavior: 'smooth'\n    });\n    setLoading(false);\n  }, []);\n  const longPressHandler = useLongPress(() => {\n    setShowLinkModal(true);\n  });\n  const {\n    0: showLinkModal,\n    1: setShowLinkModal\n  } = useState(false);\n  const {\n    0: showCourseSearchModal,\n    1: setCourseSearchModal\n  } = useState(false);\n\n  const handleLinkModalClose = () => setShowLinkModal(false);\n\n  const handleCourseSearchModalClose = () => setCourseSearchModal(false);\n\n  let {\n    0: linkForTarget,\n    1: setLinkForTarget\n  } = useState('');\n\n  const sendApplication = (courseId, userInfo) => {\n    let data = {\n      city_id: cityId,\n      direction_id: directionId,\n      name: userInfo.fullName,\n      phone: userInfo.phone,\n      email: userInfo.email,\n      promocode: userInfo.promocode,\n      age: 0,\n      isOnline: isOnline,\n      course_id: courseId,\n      role_id: searchingTutors ? 6 : 4\n    };\n    axios({\n      method: 'post',\n      url: `${globals.productionServerDomain}/createCourseSearchTicket`,\n      data: data,\n      headers: {\n        'Authorization': `Bearer ${globals.localStorageKeys.authToken}`\n      }\n    }).then(function (res) {}).catch(() => {\n      alert('Что-то пошло нетак!');\n    });\n  };\n\n  return __jsx(\"div\", {\n    id: 'page_top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, __jsx(ModalWindow, {\n    show: showLinkModal,\n    handleClose: handleLinkModalClose,\n    contactForm: 'contactForm',\n    body: __jsx(React.Fragment, null, __jsx(\"p\", {\n      style: {\n        color: 'white',\n        fontSize: 18,\n        padding: 20,\n        boxSizing: 'border-box',\n        width: '100%',\n        wordBreak: 'break-word'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430:\"), linkForTarget)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, \"\\u041A\\u0443\\u0440\\u0441\\u044B\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/atom-icon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: ym()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  })), __jsx(Header, {\n    white: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: 'coursesBlock',\n    className: classnames(styles.container, styles.topBlock),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.img_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: \"/notebook-dynamic-color.png\",\n    style: {\n      height: 48,\n      width: 48\n    },\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 33\n    }\n  }), searchingCenterState === false && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 41\n    }\n  }, \"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0440\\u0435\\u043F\\u0435\\u0442\\u0438\\u0442\\u043E\\u0440\\u044B\"), searchingCenterState === true && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }, currentCourseCategory)), courseCards !== null ? imagesBase.length !== 0 && (courseCards.length > 0 ? __jsx(\"div\", {\n    className: classnames(styles.courses_block),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 45\n    }\n  }, courseCards.map((course, idx) => {\n    if (course.title !== 'test') {\n      return __jsx(\"div\", {\n        className: styles.courseCard_item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 65\n        }\n      }, searchingCenterState === false && __jsx(TutorCourseCard, {\n        key: idx,\n        coverImage: imagesBase[Math.floor(Math.random() * imagesBase.length)].src,\n        sendApplicationCallback: sendApplication,\n        setLoadingModal: setLoadingModal,\n        course: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 73\n        }\n      }), searchingCenterState === true && __jsx(CourseCard, {\n        key: idx,\n        coverImage: imagesBase[Math.floor(Math.random() * imagesBase.length)].src,\n        sendApplicationCallback: sendApplication,\n        setLoadingModal: setLoadingModal,\n        course: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 73\n        }\n      }));\n    }\n  })) : __jsx(CourseSearchResultIsNotDefind, {\n    catalog: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 55\n    }\n  })) : __jsx(\"div\", {\n    className: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"/loader.gif\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 41\n    }\n  })))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Courses;","map":{"version":3,"sources":["C:/Server/data/htdocs/oilan-mirror/goco/pages/courses/index.js"],"names":["Head","Header","styles","CourseCard","HorizontalLine","Footer","React","useState","useEffect","Slider","SimpleSlider","StockCard","ContactButton","useContext","UserContext","globals","EditCourseCard","Loading","classnames","useLongPress","ContactForm","ModalWindow","SubscriptionPaymentForm","CourseSearchForm","TutorCourseCard","CourseSearchResultIsNotDefind","ym","axios","require","default","Courses","props","cityId","setCityId","directionId","setDirectionId","isOnline","setIsOnline","courseId","setCourseId","searchingTutors","setSearchingTutors","courseCards","setCourseCards","filters","setFilters","loading","setLoading","loadingModal","setLoadingModal","openMoreSort","setOpenMoreSort","hideSort","setHideSort","currentPage","setCurrentPage","cardsNum","setCardsNum","sortType","setSortType","lessonType","setLessonType","currentCourseCategory","setCurrentCourseCategory","tempCategoryId","setTempCategoryId","imagesBase","setImagesBase","loadCourseCards","imagesBaseResponse","get","productionServerDomain","data","result","then","filterBtnHandler","centerName","city","direction","price","center","searchingCenterValue","Boolean","Number","console","log","toString","query","postResult","post","searchingCenterState","setSearchingCenterState","params","URLSearchParams","window","location","search","searchingCenter","has","res","document","querySelector","scrollIntoView","behavior","longPressHandler","setShowLinkModal","showLinkModal","showCourseSearchModal","setCourseSearchModal","handleLinkModalClose","handleCourseSearchModalClose","linkForTarget","setLinkForTarget","sendApplication","userInfo","city_id","direction_id","name","fullName","phone","email","promocode","age","course_id","role_id","method","url","headers","localStorageKeys","authToken","catch","alert","color","fontSize","padding","boxSizing","width","wordBreak","__html","container","topBlock","img_title","height","length","courses_block","map","course","idx","title","courseCard_item","Math","floor","random","src","loader"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport Header from '../../src/components/Header/Header'\r\nimport styles from \"../../styles/components/content/Courses.module.css\";\r\nimport CourseCard from \"../../src/components/CourseCard/CourseCard\";\r\nimport HorizontalLine from \"../../src/components/HorizontalLine/HorizaontalLine\";\r\nimport Footer from \"../../src/components/Footer/Footer\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css'\r\nimport SimpleSlider from \"../../src/components/SimpleSlider/SimpleSlider\";\r\nimport StockCard from \"../../src/components/StockCard/StockCard\";\r\nimport ContactButton from \"../../src/components/ContactButton/ContactButton\";\r\nimport {useContext} from \"react\";\r\nimport UserContext from \"../../src/userContext\"\r\nimport globals from \"../../src/globals\";\r\nimport EditCourseCard from \"../../src/components/EditCourseCard/EditCourseCard\";\r\nimport Loading from \"../../src/components/Loading/Loading\"\r\nimport classnames from 'classnames'\r\nimport {useLongPress} from 'use-long-press';\r\nimport {ContactForm} from \"../../src/components/Forms/ContactForm/ContactForm\";\r\nimport ModalWindow from \"../../src/components/Modal/ModalWindow\";\r\nimport {SubscriptionPaymentForm} from \"../../src/components/Forms/SubscriptionPaymentForm/SubscriptionPaymentForm\";\r\nimport {CourseSearchForm} from \"../../src/components/Forms/CourseSearchForm/CourseSearchForm\";\r\nimport TutorCourseCard from \"../../src/components/TutorCourseCard\";\r\nimport CourseSearchResultIsNotDefind from \"../../src/components/CourseSearchResultIsNotDefind\";\r\n\r\nconst ym = () => {\r\n    return (\r\n        \"<!-- Yandex.Metrika counter -->\\n\" +\r\n        \"<script type=\\\"text/javascript\\\" >\\n\" +\r\n        \"   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};\\n\" +\r\n        \"   m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})\\n\" +\r\n        \"   (window, document, \\\"script\\\", \\\"https://mc.yandex.ru/metrika/tag.js\\\", \\\"ym\\\");\\n\" +\r\n        \"\\n\" +\r\n        \"   ym(78186067, \\\"init\\\", {\\n\" +\r\n        \"        clickmap:true,\\n\" +\r\n        \"        trackLinks:true,\\n\" +\r\n        \"        accurateTrackBounce:true,\\n\" +\r\n        \"        webvisor:true,\\n\" +\r\n        \"        ecommerce:\\\"dataLayer\\\"\\n\" +\r\n        \"   });\\n\" +\r\n        \"</script>\\n\" +\r\n        \"<noscript><div><img src=\\\"https://mc.yandex.ru/watch/78186067\\\" style=\\\"position:absolute; left:-9999px;\\\" alt=\\\"\\\" /></div></noscript>\\n\" +\r\n        \"<!-- /Yandex.Metrika counter -->\"\r\n    );\r\n}\r\n\r\n\r\nconst axios = require('axios').default;\r\n\r\nfunction Courses({props}) {\r\n    const [cityId, setCityId] = useState(0);\r\n    const [directionId, setDirectionId] = useState(0);\r\n    const [isOnline, setIsOnline] = useState(0);\r\n    const [courseId, setCourseId] = useState(0);\r\n\r\n    const [searchingTutors, setSearchingTutors] = useState(false);\r\n    const [courseCards, setCourseCards] = useState(null);\r\n    const [filters, setFilters] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingModal, setLoadingModal] = useState(false);\r\n    const [openMoreSort, setOpenMoreSort] = useState(false)\r\n    const [hideSort, setHideSort] = useState(false)\r\n\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [cardsNum, setCardsNum] = useState(12);\r\n\r\n    const [sortType, setSortType] = useState(0)\r\n    const [lessonType, setLessonType] = useState(0)\r\n\r\n    const [currentCourseCategory, setCurrentCourseCategory] = useState(\"Найденные курсы\")\r\n    const [tempCategoryId, setTempCategoryId] = useState(\"Все направления\")\r\n\r\n    const [imagesBase, setImagesBase] = useState([]);\r\n\r\n    const loadCourseCards = async () => {\r\n        setLoading(true)\r\n\r\n        let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\r\n        setImagesBase(imagesBaseResponse.data);\r\n\r\n        let result = await axios.get(`${globals.productionServerDomain}/courseCards/`).then(() => {\r\n            setCourseCards(result.data);\r\n        }).then(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const filterBtnHandler = async (centerName, city, direction, price, center, isOnline, sortType, searchingCenterValue) => {\r\n        setLoading(true);\r\n        searchingCenterValue = Boolean(Number(searchingCenterValue));\r\n\r\n        let imagesBaseResponse = await axios.get(`${globals.productionServerDomain}/imagesBase`);\r\n        setImagesBase(imagesBaseResponse.data);\r\n\r\n        console.log('images', imagesBase)\r\n\r\n        const data = {\r\n            centerName: centerName,\r\n            city: city.toString(),\r\n            direction: direction.toString(),\r\n            price: price.toString(),\r\n            center: center.toString(),\r\n            isOnline: isOnline.toString(),\r\n            //individualLesson: individualLesson,\r\n            sortType: sortType.toString()\r\n        }\r\n\r\n        let query = `${globals.productionServerDomain}/${(searchingCenterValue) ? 'courseCardsFilter' : 'tutorCourseCardsFilter'}/`;\r\n        console.log('query', query);\r\n        let postResult = await axios.post(query, data);\r\n        console.log('course cards');\r\n        console.log(postResult.data);\r\n        setCourseCards(postResult.data);\r\n\r\n        setLoading(false);\r\n        setOpenMoreSort(true)\r\n    }\r\n    const [searchingCenterState, setSearchingCenterState] = useState(true)\r\n    useEffect(async () =>{\r\n        setLoading(true)\r\n        const params = new URLSearchParams(window.location.search);\r\n        console.log('params', params);\r\n        let centerName = params.get('centerName');\r\n        let direction = null;\r\n        let city = null;\r\n        let price = null;\r\n        let isOnline = null;\r\n        let center = null;\r\n        let searchingCenter = Number(params.get('searchingCenter'));\r\n        setSearchingCenterState(Boolean(searchingCenter))\r\n\r\n        if (params.has('direction')) {\r\n            direction = params.get('direction');\r\n            setDirectionId(Number(direction));\r\n            //document.getElementById(\"directionSelect\").value = direction.toString();\r\n        }\r\n        if (params.has('city')) {\r\n            city = params.get('city');\r\n            setCityId(Number(city));\r\n            //document.getElementById(\"citySelect\").value = city.toString();\r\n        }\r\n        if (params.has('price')) {\r\n            price = params.get('price');\r\n            setDirectionId(Number(direction));\r\n            //document.getElementById(\"priceSelect\").value = price;\r\n        }\r\n        if (params.has('isOnline')) {\r\n            isOnline = params.get('isOnline');\r\n            setIsOnline(Number(isOnline))\r\n            //document.getElementById(\"isOnlineSelect\").value = isOnline;\r\n        }\r\n        if (params.has('center')) {\r\n            center = params.get('center');\r\n            //document.getElementById(\"centerSelect\").value = center;\r\n        }\r\n        if (direction !== null || city !== null || price !== null || isOnline !== null || center !== null) {\r\n            filterBtnHandler(centerName, city === null ? 0 : Number(city), direction === null ? 0 : Number(direction), price === null ? 0 : price, center === null ? 0 : center, isOnline === null ? 0 : isOnline, 'price asc', searchingCenter)\r\n                .then(() => {\r\n                    console.log('searching center', searchingCenter)\r\n                    if(searchingCenter === 0) {\r\n                        setSearchingTutors(true)\r\n                    } else {\r\n                        setSearchingTutors(false)\r\n                    }\r\n                    console.log(\"searching tutors\", searchingTutors)\r\n                })\r\n        } else {\r\n            loadCourseCards().then(()=>setLoading(false))\r\n        }\r\n\r\n        axios.get(`${globals.productionServerDomain}/filters`).then(res => {\r\n            setFilters(res.data);\r\n            console.log(res);\r\n        })\r\n\r\n        document.querySelector('#page_top').scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    const longPressHandler = useLongPress(() => {\r\n        setShowLinkModal(true);\r\n    });\r\n\r\n    const [showLinkModal, setShowLinkModal] = useState(false);\r\n    const [showCourseSearchModal, setCourseSearchModal] = useState(false);\r\n\r\n    const handleLinkModalClose = () => setShowLinkModal(false);\r\n    const handleCourseSearchModalClose = () => setCourseSearchModal(false);\r\n\r\n    let [linkForTarget, setLinkForTarget] = useState('');\r\n\r\n    const sendApplication = (courseId, userInfo) => {\r\n\r\n        let data = {\r\n            city_id: cityId,\r\n            direction_id: directionId,\r\n            name: userInfo.fullName,\r\n            phone: userInfo.phone,\r\n            email: userInfo.email,\r\n            promocode: userInfo.promocode,\r\n            age: 0,\r\n            isOnline: isOnline,\r\n            course_id: courseId,\r\n            role_id: searchingTutors ? 6 : 4\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: `${globals.productionServerDomain}/createCourseSearchTicket`,\r\n            data: data,\r\n            headers: {\r\n                'Authorization': `Bearer ${globals.localStorageKeys.authToken}`\r\n            }\r\n        }).then(function(res){\r\n\r\n        }).catch(() => {\r\n            alert('Что-то пошло нетак!');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id={'page_top'}>\r\n            <ModalWindow\r\n                show={showLinkModal}\r\n                handleClose={handleLinkModalClose}\r\n                contactForm={'contactForm'}\r\n                body={\r\n                    <>\r\n                        <p style={{\r\n                            color: 'white',\r\n                            fontSize: 18,\r\n                            padding: 20,\r\n                            boxSizing: 'border-box',\r\n                            width: '100%',\r\n                            wordBreak: 'break-word'\r\n                        }}>\r\n                            <p>Ссылка:</p>\r\n                            {linkForTarget}\r\n                        </p>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Head>\r\n                <title>Курсы</title>\r\n                <link rel=\"icon\" href=\"/atom-icon.png\"/>\r\n                <div dangerouslySetInnerHTML={{__html: ym()}}/>\r\n            </Head>\r\n\r\n            <Header white={true}/>\r\n            {/*<ContactButton/>*/}\r\n            {/*<div className={styles.topHeader}>*/}\r\n            {/*    <div className={styles.topHeaderBody}>*/}\r\n            {/*        <img src=\"/double-l-shape.png\" className={styles.RoundCube} alt=\"\"/>*/}\r\n            {/*        <img src=\"/robmik-tuda-suda.png\" className={styles.ConeBlue} alt=\"\"/>*/}\r\n            {/*        <p className={styles.subtitle} style={{margin: '0 0 5px 0'}}>*/}\r\n            {/*            воспользуйтесь фильтром для удобного поиска курсов*/}\r\n            {/*        </p>*/}\r\n\r\n            {/*        <div className={styles.filter}>*/}\r\n            {/*            <div className={styles.filterBlock}>*/}\r\n            {/*                <select name=\"citySelect\" id=\"citySelect\" className={styles.selectBlock}>*/}\r\n            {/*                    <option value=\"0\">Города</option>*/}\r\n            {/*                    {*/}\r\n            {/*                        filters[0] !== undefined*/}\r\n            {/*                            ?*/}\r\n            {/*                            (filters[0].map(filterOption => (*/}\r\n            {/*                                filterOption.name !== \"test\"*/}\r\n            {/*                                    ?*/}\r\n            {/*                                    (<option value={filterOption.id}>{filterOption.name}</option>)*/}\r\n            {/*                                    : null*/}\r\n            {/*                            )))*/}\r\n            {/*                            :*/}\r\n            {/*                            null*/}\r\n            {/*                    }*/}\r\n            {/*                </select>*/}\r\n            {/*                <select*/}\r\n            {/*                    name=\"directionSelect\"*/}\r\n            {/*                    id=\"directionSelect\"*/}\r\n            {/*                    className={styles.selectBlock}*/}\r\n            {/*                    onChange={e => setTempCategoryId(e.target.value)}*/}\r\n            {/*                >*/}\r\n            {/*                    <option value=\"0\">Направления</option>*/}\r\n            {/*                    {*/}\r\n            {/*                        filters[1] !== undefined*/}\r\n            {/*                            ?*/}\r\n            {/*                            (filters[1].map(filterOption => (filterOption.id !== 0 ? (*/}\r\n            {/*                                <option value={filterOption.id}>{filterOption.name}</option>) : null)))*/}\r\n            {/*                            :*/}\r\n            {/*                            null*/}\r\n            {/*                    }*/}\r\n            {/*                </select>*/}\r\n            {/*                <select name=\"isOnlineSelect\" id=\"isOnlineSelect\" className={styles.selectBlock}>*/}\r\n            {/*                    <option value=\"0\">Формат занятий</option>*/}\r\n            {/*                    <option value=\"1\">Онлайн</option>*/}\r\n            {/*                    <option value=\"2\">Оффлайн</option>*/}\r\n            {/*                </select>*/}\r\n            {/*            </div>*/}\r\n            {/*            <div className={styles.filterBlock}>*/}\r\n            {/*                <select*/}\r\n            {/*                    name=\"priceSelect\"*/}\r\n            {/*                    id=\"priceSelect\"*/}\r\n            {/*                    className={styles.selectBlock}*/}\r\n            {/*                >*/}\r\n            {/*                    <option value=\"0\">Цена</option>*/}\r\n            {/*                    <option value=\"0-20000\">0-20.000KZT</option>*/}\r\n            {/*                    <option value=\"20000-40000\">20.000-40.000KZT</option>*/}\r\n            {/*                    <option value=\"40000-60000\">40.000-60.000KZT</option>*/}\r\n            {/*                    <option value=\"60000-80000\">60.000-80.000KZT</option>*/}\r\n            {/*                    <option value=\"80000-100000\">80.000-100.000KZT</option>*/}\r\n            {/*                    <option value=\"100000\">100.000KZT+</option>*/}\r\n            {/*                </select>*/}\r\n            {/*                <select*/}\r\n            {/*                    name=\"centerSelect\"*/}\r\n            {/*                    id=\"centerSelect\"*/}\r\n            {/*                    className={styles.selectBlock}*/}\r\n            {/*                >*/}\r\n            {/*                    <option value=\"0\">Центры</option>*/}\r\n            {/*                    {*/}\r\n            {/*                        filters[2] !== undefined*/}\r\n            {/*                            ?*/}\r\n            {/*                            (filters[2].map(filterOption =>*/}\r\n            {/*                                filterOption.title !== \"test\"*/}\r\n            {/*                                    ?*/}\r\n            {/*                                    (<option value={filterOption.id}>{filterOption.title}</option>)*/}\r\n            {/*                                    :*/}\r\n            {/*                                    null*/}\r\n            {/*                            ))*/}\r\n            {/*                            :*/}\r\n            {/*                            null*/}\r\n            {/*                    }*/}\r\n            {/*                </select>*/}\r\n\r\n            {/*                <select*/}\r\n            {/*                    name=\"sortTypeSelect\"*/}\r\n            {/*                    id=\"sortTypeSelect\"*/}\r\n            {/*                    className={styles.selectBlock}*/}\r\n            {/*                    defaultValue={\"0\"}*/}\r\n            {/*                >*/}\r\n            {/*                    <option value=\"0\">Сортировать</option>*/}\r\n            {/*                    <option value=\"price asc\">Возрастание цены</option>*/}\r\n            {/*                    <option value=\"price desc\">Убывание цены</option>*/}\r\n            {/*                </select>*/}\r\n            {/*            </div>*/}\r\n            {/*            <div className={styles.search_btnBody}>*/}\r\n\r\n            {/*                <div className={styles.search_btnDIV}>*/}\r\n            {/*                    <div*/}\r\n            {/*                        className={styles.search_btn}*/}\r\n            {/*                        {...longPressHandler}*/}\r\n            {/*                        onClick={() => {*/}\r\n            {/*                            let city = null;*/}\r\n            {/*                            try {*/}\r\n            {/*                                city = Number(document.getElementById(\"citySelect\").value);*/}\r\n            {/*                            } catch {*/}\r\n            {/*                                city = 0;*/}\r\n            {/*                            }*/}\r\n\r\n            {/*                            let direction = Number(document.getElementById(\"directionSelect\").value);*/}\r\n            {/*                            let center = document.getElementById(\"centerSelect\").value;*/}\r\n            {/*                            let price = document.getElementById(\"priceSelect\").value;*/}\r\n            {/*                            let isOnline = document.getElementById(\"isOnlineSelect\").value;*/}\r\n            {/*                            //let individualLessonSelect = document.getElementById(\"individualLessonSelect\").value;*/}\r\n            {/*                            let sortType = document.getElementById(\"sortTypeSelect\").value;*/}\r\n\r\n            {/*                            console.log(\"sort type: \" + sortType);*/}\r\n\r\n            {/*                            const link = `${globals.productionSiteDomain}/?center=${center}&sortType=${sortType}&direction=${direction}&city=${city}&price=${price}&isOnline=${isOnline}&searchingCenter=1`;*/}\r\n            {/*                            setLinkForTarget(link);*/}\r\n\r\n            {/*                            filterBtnHandler(city, direction, price, center, isOnline, sortType, 1);*/}\r\n\r\n            {/*                            for (let i = 0; i < filters[1].length; i++) {*/}\r\n            {/*                                if (filters[1][i].id == tempCategoryId) {*/}\r\n            {/*                                    console.log('setting category name: ' + filters[1][i].name)*/}\r\n            {/*                                    setCurrentCourseCategory(filters[1][i].name);*/}\r\n            {/*                                    break;*/}\r\n            {/*                                }*/}\r\n            {/*                            }*/}\r\n\r\n            {/*                            document.querySelector('#page_top').scrollIntoView({*/}\r\n            {/*                                behavior: 'smooth'*/}\r\n            {/*                            });*/}\r\n            {/*                        }}>*/}\r\n            {/*                        НАЙТИ КУРСЫ*/}\r\n            {/*                    </div>*/}\r\n\r\n            {/*                    <div*/}\r\n            {/*                        className={styles.search_btn}*/}\r\n            {/*                        {...longPressHandler}*/}\r\n            {/*                        onClick={() => {*/}\r\n            {/*                            let city = null;*/}\r\n            {/*                            try {*/}\r\n            {/*                                city = Number(document.getElementById(\"citySelect\").value);*/}\r\n            {/*                            } catch {*/}\r\n            {/*                                city = 0;*/}\r\n            {/*                            }*/}\r\n\r\n            {/*                            let direction = Number(document.getElementById(\"directionSelect\").value);*/}\r\n            {/*                            let center = document.getElementById(\"centerSelect\").value;*/}\r\n            {/*                            let price = document.getElementById(\"priceSelect\").value;*/}\r\n            {/*                            let isOnline = document.getElementById(\"isOnlineSelect\").value;*/}\r\n            {/*                            //let individualLessonSelect = document.getElementById(\"individualLessonSelect\").value;*/}\r\n            {/*                            let sortType = document.getElementById(\"sortTypeSelect\").value;*/}\r\n\r\n            {/*                            console.log(\"sort type: \" + sortType);*/}\r\n\r\n            {/*                            const link = `${globals.productionSiteDomain}/?center=${center}&sortType=${sortType}&direction=${direction}&city=${city}&price=${price}&isOnline=${isOnline}&searchingCenter=0`;*/}\r\n            {/*                            setLinkForTarget(link);*/}\r\n\r\n            {/*                            filterBtnHandler(city, direction, price, center, isOnline, sortType, 0);*/}\r\n\r\n            {/*                            for (let i = 0; i < filters[1].length; i++) {*/}\r\n            {/*                                if (filters[1][i].id == tempCategoryId) {*/}\r\n            {/*                                    console.log('setting category name: ' + filters[1][i].name)*/}\r\n            {/*                                    setCurrentCourseCategory(filters[1][i].name);*/}\r\n            {/*                                    break;*/}\r\n            {/*                                }*/}\r\n            {/*                            }*/}\r\n\r\n            {/*                            document.querySelector('#page_top').scrollIntoView({*/}\r\n            {/*                                behavior: 'smooth'*/}\r\n            {/*                            });*/}\r\n            {/*                        }}>*/}\r\n            {/*                        НАЙТИ РЕПЕТИТОРА*/}\r\n            {/*                    </div>*/}\r\n            {/*                </div>*/}\r\n            {/*            </div>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n\r\n            {/*</div>*/}\r\n\r\n\r\n            <div id={'coursesBlock'}\r\n                 className={classnames(styles.container, styles.topBlock)}>\r\n                {\r\n                    (\r\n                        <>\r\n                            <div className={styles.img_title}>\r\n                                <img src=\"/notebook-dynamic-color.png\" style={{height: 48, width: 48}} alt=\"\"/>\r\n                                    {searchingCenterState===false && (\r\n                                        <p>Найденные репетиторы</p>\r\n                                    )}\r\n                                    {searchingCenterState===true && (\r\n                                        <p>{currentCourseCategory}</p>\r\n                                    )}\r\n                                \r\n                            </div>\r\n\r\n                            {\r\n                                courseCards !== null ? (\r\n                                    imagesBase.length !== 0 && (\r\n                                        courseCards.length > 0 ? (\r\n                                            <div className={classnames(styles.courses_block)}>\r\n                                                {\r\n                                                    courseCards.map((course, idx) => {\r\n                                                        if (course.title !== 'test') {\r\n                                                            return (\r\n                                                                <div className={styles.courseCard_item}>\r\n                                                                    {searchingCenterState===false && (\r\n                                                                        <TutorCourseCard key={idx} coverImage={imagesBase[Math.floor(Math.random() * imagesBase.length)].src} sendApplicationCallback={sendApplication} setLoadingModal={setLoadingModal} course={course}/>\r\n                                                                    )}\r\n                                                                    {searchingCenterState===true && (\r\n                                                                        <CourseCard key={idx} coverImage={imagesBase[Math.floor(Math.random() * imagesBase.length)].src} sendApplicationCallback={sendApplication} setLoadingModal={setLoadingModal} course={course}/>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n\r\n                                            </div>) : <CourseSearchResultIsNotDefind catalog={true}/>)\r\n                                ) : (\r\n                                    <div className={styles.loader}>\r\n                                        <img src=\"/loader.gif\" alt=\"\"></img>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <Footer/>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Courses;\r\n"]},"metadata":{},"sourceType":"module"}