{"ast":null,"code":"import _toConsumableArray from \"C:/Server/data/htdocs/oilanio-mirror/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Server/data/htdocs/oilanio-mirror/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Server/data/htdocs/oilanio-mirror/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilanio-mirror\\\\src\\\\components\\\\ModeratorBlock\\\\ModeratorBlock.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport styles from \"./ModeratorBlock.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { default as axios } from \"axios\";\nimport globals from \"../../globals\";\nimport { useRouter } from \"next/router\";\nimport LoadingBlock from \"../LoadingBlock\";\nimport ModerateCourseCard from \"../ModerateCourseCard/ModerateCourseCard\";\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\nimport CardsList from \"./CardsList\";\nimport Pagination from \"./Pagination\";\n\nvar ModeratorBlock = function ModeratorBlock() {\n  _s();\n\n  // счетчики карточек по типу\n  var _useState = useState(0),\n      allCardsCount = _useState[0],\n      setAllCardsCount = _useState[1];\n\n  var _useState2 = useState(0),\n      verifiedCardsCount = _useState2[0],\n      setVerifiedCardsCount = _useState2[1];\n\n  var _useState3 = useState(0),\n      notVerifiedCardsCount = _useState3[0],\n      setNotVerifiedCardsCount = _useState3[1];\n\n  var _useState4 = useState(0),\n      redCardsCount = _useState4[0],\n      setRedCardsCount = _useState4[1];\n\n  var _useState5 = useState(0),\n      yellowCardsCount = _useState5[0],\n      setYellowCardsCount = _useState5[1];\n\n  var _useState6 = useState(0),\n      byCenterCardsCount = _useState6[0],\n      setByCenterCardsCount = _useState6[1]; // выбранный радио баттон\n\n\n  var _useState7 = useState(true),\n      allCardsChecked = _useState7[0],\n      setAllCardsChecked = _useState7[1];\n\n  var _useState8 = useState(false),\n      verifiedCardsChecked = _useState8[0],\n      setVerifiedCardsChecked = _useState8[1];\n\n  var _useState9 = useState(false),\n      notVerifiedCardsChecked = _useState9[0],\n      setNotVerifiedCardsChecked = _useState9[1];\n\n  var _useState10 = useState(false),\n      redCardsChecked = _useState10[0],\n      setRedCardsChecked = _useState10[1];\n\n  var _useState11 = useState(false),\n      yellowCardsChecked = _useState11[0],\n      setYellowCardsChecked = _useState11[1];\n\n  var _useState12 = useState(false),\n      cardsByCenterIdChecked = _useState12[0],\n      setCardsByCenterIdChecked = _useState12[1]; // текущий выбранный список карточек\n\n\n  var _useState13 = useState([]),\n      currentList = _useState13[0],\n      setCurrentList = _useState13[1];\n\n  var _useState14 = useState([]),\n      allCardsList = _useState14[0],\n      setAllCardsList = _useState14[1];\n\n  var _useState15 = useState([]),\n      redList = _useState15[0],\n      setRedList = _useState15[1];\n\n  var _useState16 = useState([]),\n      yellowList = _useState16[0],\n      setYellowList = _useState16[1];\n\n  var _useState17 = useState([]),\n      verificatedList = _useState17[0],\n      setVerificatedList = _useState17[1];\n\n  var _useState18 = useState([]),\n      notVerificatedList = _useState18[0],\n      setNotVerificatedList = _useState18[1];\n\n  var _useState19 = useState([]),\n      byCenterIdList = _useState19[0],\n      setByCenterIdList = _useState19[1];\n\n  var _useState20 = useState(0),\n      selectedCenterId = _useState20[0],\n      setSelectedCenterId = _useState20[1];\n\n  var _useState21 = useState([]),\n      filters = _useState21[0],\n      setFilters = _useState21[1];\n\n  var _useState22 = useState(false),\n      coursesLoading = _useState22[0],\n      setCoursesLoading = _useState22[1];\n\n  var _useState23 = useState(false),\n      loadingModal = _useState23[0],\n      setLoadingModal = _useState23[1];\n\n  var _useState24 = useState(1),\n      currentPage = _useState24[0],\n      setCurrentPage = _useState24[1];\n\n  var _useState25 = useState(10),\n      cardsPerPage = _useState25[0];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loadFilters();\n\n          case 2:\n            _context.next = 4;\n            return loadCourseCards();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  useEffect(function () {\n    countCardLists();\n  }, [allCardsList]);\n\n  var loadFilters = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"\".concat(globals.productionServerDomain, \"/filters\"));\n\n            case 2:\n              result = _context2.sent;\n              setFilters(result.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadFilters() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var loadCourseCards = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setCoursesLoading(true);\n              _context3.next = 3;\n              return axios.get(\"\".concat(globals.productionServerDomain, \"/courseCards/\")).then(function (result) {\n                setAllCardsList(result.data);\n                setCurrentList(result.data);\n              });\n\n            case 3:\n              result = _context3.sent;\n              // alert(\"data loaded\")\n              setCoursesLoading(false); // setAllCardsList(prevValue => {\n              //   return result.data;\n              // })\n              // setAllCardsList(result.data);\n              // setCurrentList(allCardsList)\n              // setCurrentList(allCardsList);\n              // console.log(`current list:`, currentList);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadCourseCards() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var countCardLists = function countCardLists() {\n    setAllCardsCount(allCardsList.length);\n    setRedCardsCount(0);\n    setYellowCardsCount(0);\n    setVerifiedCardsCount(0);\n    setNotVerifiedCardsCount(0);\n    setByCenterCardsCount(0);\n    allCardsList.forEach(function (course) {\n      if (!course.title || !course.addresses || !course.ages || !course.category || !course.course_desc || !course.course_title || !course.description || !course.format || !course.img_src || !course.phones || !course.price || !course.schedule || !course.type) {\n        // setRedList(prevValue => {\n        //   return [...prevValue, course];\n        // })\n        // redList.push(course);\n        // console.log(course)\n        // console.log(redCardsCount)\n        setRedCardsCount(function (prevValue) {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (course.verificated) {\n        setVerifiedCardsCount(function (prevValue) {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (!course.verificated) {\n        setNotVerifiedCardsCount(function (prevValue) {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      if (course.course_id == selectedCenterId) {\n        setByCenterCardsCount(function (prevValue) {\n          return prevValue + 1;\n        });\n      }\n    });\n    allCardsList.forEach(function (course) {\n      var str = String(course.img_src);\n      var substr = \"realibi\";\n      var checkLink = str.includes(substr);\n\n      if (course.title == course.description && course.title || course.title == course.course_desc && course.title || course.description == course.course_desc && course.description || course.ages == \" - \" || course.img_src && !checkLink) {\n        // setYellowList(prevValue => {\n        //   return [...prevValue, course];\n        // })\n        // yellowList.push(course);\n        setYellowCardsCount(function (prevValue) {\n          return prevValue += 1;\n        });\n      }\n    });\n  };\n\n  var onListLoaded = function onListLoaded(list) {\n    setCurrentList(function (prevValue) {\n      return list;\n    });\n  }; // useEffect(() => {\n  //   console.log('selectedCenterId: ', selectedCenterId)\n  // }, [selectedCenterId])\n\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var result, list, _result, _list, _result2, _list2, _result3, _list3, _result4, substr, _list4, centerId, _result5, _list5;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!allCardsChecked) {\n              _context4.next = 11;\n              break;\n            }\n\n            _context4.next = 3;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/courseCards/\"));\n\n          case 3:\n            result = _context4.sent;\n            list = result.data;\n            setCurrentPage(1); //загрузить все карточки\n\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(list);\n            });\n            setCurrentList(allCardsList); // console.log\n\n            _context4.next = 62;\n            break;\n\n          case 11:\n            if (!verifiedCardsChecked) {\n              _context4.next = 21;\n              break;\n            }\n\n            _context4.next = 14;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/verificatedCourseCards/\"));\n\n          case 14:\n            _result = _context4.sent;\n            _list = _result.data;\n            setCurrentPage(1);\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(_list);\n            });\n            _context4.next = 62;\n            break;\n\n          case 21:\n            if (!notVerifiedCardsChecked) {\n              _context4.next = 31;\n              break;\n            }\n\n            _context4.next = 24;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/notVerificatedCourseCards/\"));\n\n          case 24:\n            _result2 = _context4.sent;\n            _list2 = _result2.data;\n            setCurrentPage(1);\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(_list2);\n            });\n            _context4.next = 62;\n            break;\n\n          case 31:\n            if (!redCardsChecked) {\n              _context4.next = 41;\n              break;\n            }\n\n            _context4.next = 34;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/courseCards/\"));\n\n          case 34:\n            _result3 = _context4.sent;\n            setCurrentPage(1);\n            _list3 = _result3.data.filter(function (course) {\n              if (!course.title || !course.addresses || !course.ages || !course.category || !course.course_desc || !course.course_title || !course.description || !course.format || !course.img_src || !course.phones || !course.price || !course.schedule || !course.type) {\n                return course;\n              }\n            });\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(_list3);\n            });\n            _context4.next = 62;\n            break;\n\n          case 41:\n            if (!yellowCardsChecked) {\n              _context4.next = 52;\n              break;\n            }\n\n            _context4.next = 44;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/courseCards/\"));\n\n          case 44:\n            _result4 = _context4.sent;\n            //загрузить желтые карточки\n            substr = \"realibi\";\n            setCurrentPage(1);\n            _list4 = _result4.data.filter(function (course) {\n              var str = String(course.img_src);\n              var checkLink = str.includes(substr);\n\n              if (course.title == course.description && course.title || course.title == course.course_desc && course.title || course.description == course.course_desc && course.description || course.ages == \" - \" || course.img_src && !checkLink) {\n                return course;\n              }\n            });\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(_list4);\n            });\n            _context4.next = 62;\n            break;\n\n          case 52:\n            if (!cardsByCenterIdChecked) {\n              _context4.next = 62;\n              break;\n            }\n\n            // console.log(`cardsByCenterIdChecked`);\n            setCurrentPage(1); // загрузить карточки центра\n\n            centerId = selectedCenterId; // console.log(`center id: `, centerId)\n\n            _context4.next = 57;\n            return axios.get(\"\".concat(globals.productionServerDomain, \"/courseCardsByCenterId/\").concat(centerId));\n\n          case 57:\n            _result5 = _context4.sent;\n            _list5 = _result5.data;\n            setByCenterCardsCount(_list5.length);\n            setCurrentList([]);\n            setCurrentList(function () {\n              return _toConsumableArray(_list5);\n            });\n\n          case 62:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), [allCardsChecked, verifiedCardsChecked, notVerifiedCardsChecked, redCardsChecked, yellowCardsChecked, cardsByCenterIdChecked, selectedCenterId]);\n  useEffect(function () {// console.log(currentCards);\n  }, [currentCards]);\n  var indexOfLastCard = currentPage * cardsPerPage;\n  var indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  var currentCards = currentList.slice(indexOfFirstCard, indexOfLastCard);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.filterArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.leftArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 (\", allCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"allCardsChecked\",\n    onClick: function onClick() {\n      setAllCardsChecked(true);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: allCardsChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0443\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 (\", verifiedCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"verificatedChecked\",\n    onClick: function onClick() {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(true);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: verifiedCardsChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u043D\\u0435 \\u0443\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 (\", notVerifiedCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"notVerificatedChecked\",\n    onClick: function onClick() {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(true);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: notVerifiedCardsChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: styles.rightArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, \"\\u0421 \\u043D\\u0435\\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043D\\u044B\\u043C\\u0438 \\u043F\\u043E\\u043B\\u044F\\u043C\\u0438 (\", redCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: function onClick() {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(true);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: redCardsChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, \"\\u0421 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u043C\\u0438 \\u0438\\u043B\\u0438 \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u044F\\u044E\\u0449\\u0438\\u043C\\u0438\\u0441\\u044F \\u043F\\u043E\\u043B\\u044F\\u043C\\u0438 (\", yellowCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: function onClick() {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(true);\n      setCardsByCenterIdChecked(false); // onRadioButtonClicked();\n    },\n    checked: yellowCardsChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  })), __jsx(\"p\", {\n    className: styles.moderate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0446\\u0435\\u043D\\u0442\\u0440\\u0443 (\", byCenterCardsCount, \"): \"), __jsx(\"input\", {\n    type: \"radio\",\n    onClick: function onClick() {\n      setAllCardsChecked(false);\n      setVerifiedCardsChecked(false);\n      setNotVerifiedCardsChecked(false);\n      setRedCardsChecked(false);\n      setYellowCardsChecked(false);\n      setCardsByCenterIdChecked(true); // onRadioButtonClicked();\n    },\n    checked: cardsByCenterIdChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }), __jsx(\"select\", {\n    disabled: !cardsByCenterIdChecked,\n    className: styles.wrapperItemInput,\n    onChange: function onChange(e) {\n      return setSelectedCenterId(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, filters[2] !== undefined ? filters[2].map(function (filterOption) {\n    return filterOption.title !== \"test\" ? __jsx(\"option\", {\n      value: filterOption.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 23\n      }\n    }, filterOption.title) : null;\n  }) : null)))), currentCards.length > 0 && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, __jsx(CardsList, {\n    currentCards: currentCards,\n    setLoadingModal: setLoadingModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, __jsx(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: currentList.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(ModeratorBlock, \"OkaQnvaz9FjS5oMvlAbmsUN7iAg=\");\n\n_c = ModeratorBlock;\nexport default ModeratorBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModeratorBlock\");","map":{"version":3,"sources":["C:/Server/data/htdocs/oilanio-mirror/src/components/ModeratorBlock/ModeratorBlock.js"],"names":["styles","React","useEffect","useState","default","axios","globals","useRouter","LoadingBlock","ModerateCourseCard","CourseSearchResultIsNotDefind","CardsList","Pagination","ModeratorBlock","allCardsCount","setAllCardsCount","verifiedCardsCount","setVerifiedCardsCount","notVerifiedCardsCount","setNotVerifiedCardsCount","redCardsCount","setRedCardsCount","yellowCardsCount","setYellowCardsCount","byCenterCardsCount","setByCenterCardsCount","allCardsChecked","setAllCardsChecked","verifiedCardsChecked","setVerifiedCardsChecked","notVerifiedCardsChecked","setNotVerifiedCardsChecked","redCardsChecked","setRedCardsChecked","yellowCardsChecked","setYellowCardsChecked","cardsByCenterIdChecked","setCardsByCenterIdChecked","currentList","setCurrentList","allCardsList","setAllCardsList","redList","setRedList","yellowList","setYellowList","verificatedList","setVerificatedList","notVerificatedList","setNotVerificatedList","byCenterIdList","setByCenterIdList","selectedCenterId","setSelectedCenterId","filters","setFilters","coursesLoading","setCoursesLoading","loadingModal","setLoadingModal","currentPage","setCurrentPage","cardsPerPage","loadFilters","loadCourseCards","countCardLists","get","productionServerDomain","result","data","then","length","forEach","course","title","addresses","ages","category","course_desc","course_title","description","format","img_src","phones","price","schedule","type","prevValue","verificated","course_id","str","String","substr","checkLink","includes","onListLoaded","list","filter","centerId","currentCards","indexOfLastCard","indexOfFirstCard","slice","paginate","pageNumber","filterArea","leftArea","moderate","rightArea","wrapperItemInput","e","target","value","undefined","map","filterOption","id","width"],"mappings":"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","sourcesContent":["import styles from \"./ModeratorBlock.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { default as axios } from \"axios\";\r\nimport globals from \"../../globals\";\r\nimport { useRouter } from \"next/router\";\r\nimport LoadingBlock from \"../LoadingBlock\";\r\nimport ModerateCourseCard from \"../ModerateCourseCard/ModerateCourseCard\";\r\nimport CourseSearchResultIsNotDefind from \"../CourseSearchResultIsNotDefind\";\r\nimport CardsList from \"./CardsList\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst ModeratorBlock = () => {\r\n  // счетчики карточек по типу\r\n  const [allCardsCount, setAllCardsCount] = useState(0);\r\n  const [verifiedCardsCount, setVerifiedCardsCount] = useState(0);\r\n  const [notVerifiedCardsCount, setNotVerifiedCardsCount] = useState(0);\r\n  const [redCardsCount, setRedCardsCount] = useState(0);\r\n  const [yellowCardsCount, setYellowCardsCount] = useState(0);\r\n  const [byCenterCardsCount, setByCenterCardsCount] = useState(0);\r\n\r\n  // выбранный радио баттон\r\n  const [allCardsChecked, setAllCardsChecked] = useState(true);\r\n  const [verifiedCardsChecked, setVerifiedCardsChecked] = useState(false);\r\n  const [notVerifiedCardsChecked, setNotVerifiedCardsChecked] = useState(false);\r\n  const [redCardsChecked, setRedCardsChecked] = useState(false);\r\n  const [yellowCardsChecked, setYellowCardsChecked] = useState(false);\r\n  const [cardsByCenterIdChecked, setCardsByCenterIdChecked] = useState(false);\r\n\r\n  // текущий выбранный список карточек\r\n  const [currentList, setCurrentList] = useState([]);\r\n  const [allCardsList, setAllCardsList] = useState([]);\r\n  const [redList, setRedList] = useState([]);\r\n  const [yellowList, setYellowList] = useState([]);\r\n  const [verificatedList, setVerificatedList] = useState([]);\r\n  const [notVerificatedList, setNotVerificatedList] = useState([]);\r\n  const [byCenterIdList, setByCenterIdList] = useState([]);\r\n\r\n  const [selectedCenterId, setSelectedCenterId] = useState(0);\r\n\r\n  const [filters, setFilters] = useState([]);\r\n\r\n  const [coursesLoading, setCoursesLoading] = useState(false);\r\n\r\n  const [loadingModal, setLoadingModal] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage] = useState(10);\r\n\r\n  useEffect(async () => {\r\n    await loadFilters();\r\n    await loadCourseCards();\r\n    // countCardLists();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    countCardLists();\r\n  }, [allCardsList]);\r\n\r\n  const loadFilters = async () => {\r\n    let result = await axios.get(`${globals.productionServerDomain}/filters`);\r\n    setFilters(result.data);\r\n  };\r\n\r\n  const loadCourseCards = async () => {\r\n    setCoursesLoading(true);\r\n    let result = await axios\r\n      .get(`${globals.productionServerDomain}/courseCards/`)\r\n      .then((result) => {\r\n        setAllCardsList(result.data);\r\n        setCurrentList(result.data);\r\n      });\r\n    // alert(\"data loaded\")\r\n    setCoursesLoading(false);\r\n    // setAllCardsList(prevValue => {\r\n    //   return result.data;\r\n    // })\r\n    // setAllCardsList(result.data);\r\n    // setCurrentList(allCardsList)\r\n    // setCurrentList(allCardsList);\r\n    // console.log(`current list:`, currentList);\r\n  };\r\n\r\n  const countCardLists = () => {\r\n    setAllCardsCount(allCardsList.length);\r\n\r\n    setRedCardsCount(0);\r\n    setYellowCardsCount(0);\r\n    setVerifiedCardsCount(0);\r\n    setNotVerifiedCardsCount(0);\r\n    setByCenterCardsCount(0);\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (\r\n        !course.title ||\r\n        !course.addresses ||\r\n        !course.ages ||\r\n        !course.category ||\r\n        !course.course_desc ||\r\n        !course.course_title ||\r\n        !course.description ||\r\n        !course.format ||\r\n        !course.img_src ||\r\n        !course.phones ||\r\n        !course.price ||\r\n        !course.schedule ||\r\n        !course.type\r\n      ) {\r\n        // setRedList(prevValue => {\r\n        //   return [...prevValue, course];\r\n        // })\r\n        // redList.push(course);\r\n        // console.log(course)\r\n        // console.log(redCardsCount)\r\n        setRedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (course.verificated) {\r\n        setVerifiedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (!course.verificated) {\r\n        setNotVerifiedCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      if (course.course_id == selectedCenterId) {\r\n        setByCenterCardsCount((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }\r\n    });\r\n\r\n    allCardsList.forEach(function (course) {\r\n      const str = String(course.img_src);\r\n      const substr = \"realibi\";\r\n      const checkLink = str.includes(substr);\r\n      if (\r\n        (course.title == course.description && course.title) ||\r\n        (course.title == course.course_desc && course.title) ||\r\n        (course.description == course.course_desc && course.description) ||\r\n        course.ages == \" - \" ||\r\n        (course.img_src && !checkLink)\r\n      ) {\r\n        // setYellowList(prevValue => {\r\n        //   return [...prevValue, course];\r\n        // })\r\n        // yellowList.push(course);\r\n        setYellowCardsCount((prevValue) => {\r\n          return (prevValue += 1);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onListLoaded = (list) => {\r\n    setCurrentList((prevValue) => {\r\n      return list;\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log('selectedCenterId: ', selectedCenterId)\r\n  // }, [selectedCenterId])\r\n\r\n  useEffect(async () => {\r\n    if (allCardsChecked) {\r\n      // console.log(`allCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      //загрузить все карточки\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list]\r\n      })\r\n      setCurrentList(allCardsList);\r\n      // console.log\r\n    } else if (verifiedCardsChecked) {\r\n      // console.log(`verifiedCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/verificatedCourseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (notVerifiedCardsChecked) {\r\n      // console.log(`notVerifiedCardsChecked`);\r\n      //загрузить не верифицированные карточки\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/notVerificatedCourseCards/`\r\n      );\r\n      const list = result.data;\r\n      setCurrentPage(1);\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (redCardsChecked) {\r\n      // console.log(`redCardsChecked`);\r\n      //загрузить красные карточки\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      setCurrentPage(1);\r\n      let list = result.data.filter((course) => {\r\n        if (\r\n          !course.title ||\r\n          !course.addresses ||\r\n          !course.ages ||\r\n          !course.category ||\r\n          !course.course_desc ||\r\n          !course.course_title ||\r\n          !course.description ||\r\n          !course.format ||\r\n          !course.img_src ||\r\n          !course.phones ||\r\n          !course.price ||\r\n          !course.schedule ||\r\n          !course.type\r\n        ) {\r\n          return course;\r\n        }\r\n      });\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (yellowCardsChecked) {\r\n      // console.log(`yellowCardsChecked`);\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCards/`\r\n      );\r\n      //загрузить желтые карточки\r\n      const substr = \"realibi\";\r\n      setCurrentPage(1);\r\n      let list = result.data.filter((course) => {\r\n        const str = String(course.img_src);\r\n        const checkLink = str.includes(substr);\r\n        if (\r\n          (course.title == course.description && course.title) ||\r\n          (course.title == course.course_desc && course.title) ||\r\n          (course.description == course.course_desc && course.description) ||\r\n          course.ages == \" - \" ||\r\n          (course.img_src && !checkLink)\r\n        ) {\r\n          return course;\r\n        }\r\n      });\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list];\r\n      });\r\n    } else if (cardsByCenterIdChecked) {\r\n      // console.log(`cardsByCenterIdChecked`);\r\n      setCurrentPage(1);\r\n      // загрузить карточки центра\r\n      const centerId = selectedCenterId;\r\n      // console.log(`center id: `, centerId)\r\n      const result = await axios.get(\r\n        `${globals.productionServerDomain}/courseCardsByCenterId/${centerId}`\r\n      );\r\n      const list = result.data\r\n      setByCenterCardsCount(list.length)\r\n      setCurrentList([]);\r\n      setCurrentList(() => {\r\n        return [...list]\r\n      });\r\n    }\r\n  }, [\r\n    allCardsChecked,\r\n    verifiedCardsChecked,\r\n    notVerifiedCardsChecked,\r\n    redCardsChecked,\r\n    yellowCardsChecked,\r\n    cardsByCenterIdChecked,\r\n    selectedCenterId\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // console.log(currentCards);\r\n  }, [currentCards]);\r\n\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  const currentCards = currentList.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.filterArea}>\r\n        <div className={styles.leftArea}>\r\n          <p className={styles.moderate}>\r\n            <b>Все карточки ({allCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"allCardsChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(true);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={allCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Только утвержденные ({verifiedCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"verificatedChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(true);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={verifiedCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Только не утвержденные ({notVerifiedCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"notVerificatedChecked\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(true);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={notVerifiedCardsChecked}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className={styles.rightArea}>\r\n          <p className={styles.moderate}>\r\n            <b>С незаполненными полями ({redCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(true);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={redCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>С неверными или повторяющимися полями ({yellowCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(true);\r\n                setCardsByCenterIdChecked(false);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={yellowCardsChecked}\r\n            />\r\n          </p>\r\n          <p className={styles.moderate}>\r\n            <b>Поиск по центру ({byCenterCardsCount}): </b>\r\n            <input\r\n              type=\"radio\"\r\n              onClick={() => {\r\n                setAllCardsChecked(false);\r\n                setVerifiedCardsChecked(false);\r\n                setNotVerifiedCardsChecked(false);\r\n                setRedCardsChecked(false);\r\n                setYellowCardsChecked(false);\r\n                setCardsByCenterIdChecked(true);\r\n                // onRadioButtonClicked();\r\n              }}\r\n              checked={cardsByCenterIdChecked}\r\n            />\r\n            <select\r\n              disabled={!cardsByCenterIdChecked}\r\n              className={styles.wrapperItemInput}\r\n              onChange={(e) => setSelectedCenterId(e.target.value)}\r\n            >\r\n              {filters[2] !== undefined\r\n                ? filters[2].map((filterOption) =>\r\n                    filterOption.title !== \"test\" ? (\r\n                      <option value={filterOption.id}>\r\n                        {filterOption.title}\r\n                      </option>\r\n                    ) : null\r\n                  )\r\n                : null}\r\n            </select>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {currentCards.length > 0 && (\r\n        <div>\r\n          <CardsList currentCards={currentCards} setLoadingModal={setLoadingModal}/>\r\n          <div style={{width: \"100%\"}}>\r\n            <Pagination cardsPerPage={cardsPerPage} totalCards={currentList.length} paginate={paginate} currentPage={currentPage}/>\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeratorBlock;\r\n"]},"metadata":{},"sourceType":"module"}