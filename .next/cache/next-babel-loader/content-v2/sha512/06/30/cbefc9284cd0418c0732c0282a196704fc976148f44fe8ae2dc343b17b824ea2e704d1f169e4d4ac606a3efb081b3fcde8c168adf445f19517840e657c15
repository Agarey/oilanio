{"ast":null,"code":"import _regeneratorRuntime from \"C:/Server/data/htdocs/oilanio-mirror-agarey/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Server/data/htdocs/oilanio-mirror-agarey/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Server\\\\data\\\\htdocs\\\\oilanio-mirror-agarey\\\\src\\\\components\\\\Forms\\\\BecomeAPartnerForm\\\\BecomeAPartner.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styles from '../../../../styles/components/form.module.css';\nimport globals from \"../../../globals\";\n\nvar axios = require('axios')[\"default\"];\n\nexport function BecomeAPartner(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      companyName = _useState[0],\n      setCompanyName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      contactName = _useState2[0],\n      setContactName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      phone = _useState3[0],\n      setPhone = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      message = _useState5[0],\n      setMessage = _useState5[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      var data, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              data = {\n                company_name: companyName,\n                fullname: contactName,\n                phone: phone,\n                email: email\n              };\n              _context.next = 4;\n              return axios.post(\"\".concat(globals.productionServerDomain, \"/partnershipRequests\"), data);\n\n            case 4:\n              result = _context.sent;\n              console.log(result.data);\n              setMessage(\"Заявка успешно отправлена!\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formBody,\n    style: {\n      padding: '0 30px 30px 30px',\n      boxSizing: 'border-box',\n      marginTop: '-5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"\\u0425\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C \\u043F\\u0430\\u0440\\u0442\\u043D\\u0435\\u0440\\u043E\\u043C?\"), __jsx(\"span\", {\n    className: styles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F \\u043D\\u0438\\u0436\\u0435, \\u0438 \\u043E\\u0436\\u0438\\u0434\\u0430\\u0439\\u0442\\u0435 \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 79\n    }\n  }), \" \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430 \\u043E\\u0442 \\u043D\\u0430\\u0448\\u0438\\u0445 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440\\u043E\\u0432\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: companyName,\n    placeholder: 'Наименование вашей компании',\n    required: true,\n    onChange: function onChange(e) {\n      return setCompanyName(e.target.value);\n    },\n    className: styles.partnerFormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    className: styles.partnerFormInput,\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === 8) {\n        setPhone(phone.slice(0, -1));\n      }\n    },\n    onChange: function onChange(e) {\n      return globals.checkPhoneMask(e.target.value, setPhone);\n    },\n    placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    value: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    value: email,\n    required: true,\n    placeholder: 'Адрес электронной почты',\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    className: styles.partnerFormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: contactName,\n    placeholder: 'Контактное лицо',\n    onChange: function onChange(e) {\n      return setContactName(e.target.value);\n    },\n    className: styles.partnerFormInput,\n    minLength: 2,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, message), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\",\n    className: styles.formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(BecomeAPartner, \"4G0yixSDZqTj3OwlPIn03lLog84=\");\n\n_c = BecomeAPartner;\n\nvar _c;\n\n$RefreshReg$(_c, \"BecomeAPartner\");","map":{"version":3,"sources":["C:/Server/data/htdocs/oilanio-mirror-agarey/src/components/Forms/BecomeAPartnerForm/BecomeAPartner.js"],"names":["React","useState","styles","globals","axios","require","BecomeAPartner","props","companyName","setCompanyName","contactName","setContactName","phone","setPhone","email","setEmail","message","setMessage","handleSubmit","evt","preventDefault","data","company_name","fullname","post","productionServerDomain","result","console","log","formBody","padding","boxSizing","marginTop","title","subtitle","e","target","value","partnerFormInput","keyCode","slice","checkPhoneMask","formSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from '../../../../styles/components/form.module.css'\r\nimport globals from \"../../../globals\";\r\nconst axios = require('axios').default;\r\n\r\n\r\nexport function BecomeAPartner(props) {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [contactName, setContactName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage]= useState(\"\");\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const data = {\r\n            company_name: companyName,\r\n            fullname: contactName,\r\n            phone: phone,\r\n            email: email\r\n        };\r\n\r\n        const result = await axios.post(`${globals.productionServerDomain}/partnershipRequests`, data);\r\n\r\n        console.log(result.data);\r\n\r\n        setMessage(\"Заявка успешно отправлена!\");\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.formBody} style={{padding: '0 30px 30px 30px', boxSizing: 'border-box', marginTop: '-5px'}}>\r\n            <span className={styles.title}>Хотите стать партнером?</span>\r\n            <span className={styles.subtitle}>Заполните поля ниже, и ожидайте <br/> ответа от наших операторов</span>\r\n            <br/>\r\n            <input\r\n                type=\"text\"\r\n                value={companyName}\r\n                placeholder={'Наименование вашей компании'}\r\n                required\r\n                onChange={e => setCompanyName(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                className={styles.partnerFormInput}\r\n                onKeyDown={e => {\r\n                    if(e.keyCode === 8){\r\n                        setPhone(phone.slice(0,-1));\r\n                    }\r\n                }}\r\n                onChange={e => globals.checkPhoneMask(e.target.value, setPhone)}\r\n                placeholder='Номер телефона'\r\n                value={phone}\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                required\r\n                placeholder={'Адрес электронной почты'}\r\n                onChange={e => setEmail(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={contactName}\r\n                placeholder={'Контактное лицо'}\r\n                onChange={e => setContactName(e.target.value)}\r\n                className={styles.partnerFormInput}\r\n                minLength={2}\r\n                required\r\n            />\r\n\r\n            <p className={styles.message}>{message}</p>\r\n\r\n            <input type=\"submit\" value=\"Оставить заявку\" className={styles.formSubmit}/>\r\n        </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}